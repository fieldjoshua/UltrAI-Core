{"version":3,"file":"DocumentsPage-BAdwgAXM.js","sources":["../../node_modules/zustand/esm/middleware.mjs","../../src/stores/documentsStore.ts","../../src/stores/uiStore.ts","../../src/components/documents/DocumentList.tsx","../../src/components/documents/DocumentUpload.tsx","../../src/pages/DocumentsPage.tsx"],"sourcesContent":["const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...args) => api.dispatch(...args), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst removeStoreFromTrackedConnections = (name, store) => {\n  if (store === void 0) return;\n  const connectionInfo = trackedConnections.get(name);\n  if (!connectionInfo) return;\n  delete connectionInfo.stores[store];\n  if (Object.keys(connectionInfo.stores).length === 0) {\n    trackedConnections.delete(name);\n  }\n};\nconst findCallerName = (stack) => {\n  var _a, _b;\n  if (!stack) return void 0;\n  const traceLines = stack.split(\"\\n\");\n  const apiSetStateLineIndex = traceLines.findIndex(\n    (traceLine) => traceLine.includes(\"api.setState\")\n  );\n  if (apiSetStateLineIndex < 0) return void 0;\n  const callerLine = ((_a = traceLines[apiSetStateLineIndex + 1]) == null ? void 0 : _a.trim()) || \"\";\n  return (_b = /.+ (.+) .+/.exec(callerLine)) == null ? void 0 : _b[1];\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = ((state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === void 0 ? {\n      type: anonymousActionType || findCallerName(new Error().stack) || \"anonymous\"\n    } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  });\n  api.devtools = {\n    cleanup: () => {\n      if (connection && typeof connection.unsubscribe === \"function\") {\n        connection.unsubscribe();\n      }\n      removeStoreFromTrackedConnections(options.name, store);\n    }\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...args) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && args[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...args);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format.\n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState) return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, fn) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0) fn(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = ((selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  });\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nfunction combine(initialState, create) {\n  return (...args) => Object.assign({}, initialState, create(...args));\n}\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(name, JSON.stringify(newValue, options == null ? void 0 : options.replacer)),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst persistImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    return setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      return setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            const migration = options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n            if (migration instanceof Promise) {\n              return migration.then((result) => [true, result]);\n            }\n            return [true, migration];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, void 0];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","import { create } from 'zustand';\nimport { devtools } from 'zustand/middleware';\nimport axios from 'axios';\n\n// Types\nexport interface Document {\n  id: string;\n  filename: string;\n  file_size: number;\n  mime_type: string;\n  uploaded_at: string;\n  description?: string;\n  tags?: string[];\n}\n\ninterface DocumentsState {\n  // State\n  documents: Document[];\n  selectedDocuments: string[];\n  isLoading: boolean;\n  error: string | null;\n  uploadProgress: Record<string, number>;\n\n  // Actions\n  fetchDocuments: () => Promise<void>;\n  uploadDocument: (\n    file: File,\n    description?: string,\n    tags?: string[]\n  ) => Promise<void>;\n  deleteDocument: (documentId: string) => Promise<void>;\n  setSelectedDocuments: (documentIds: string[]) => void;\n  toggleDocumentSelection: (documentId: string) => void;\n  setUploadProgress: (fileId: string, progress: number) => void;\n  clearError: () => void;\n  addDocument: (document: Document) => void;\n  removeDocument: (documentId: string) => void;\n  clearDocuments: () => void;\n}\n\n// @ts-ignore\nconst API_URL =\n  globalThis.import?.meta?.env?.VITE_API_URL || 'http://localhost:8000/api';\n\nexport const useDocumentsStore = create<DocumentsState>()(\n  devtools(\n    (set, get) => ({\n      // Initial state\n      documents: [],\n      selectedDocuments: [],\n      isLoading: false,\n      error: null,\n      uploadProgress: {},\n\n      // Fetch documents from API\n      fetchDocuments: async () => {\n        set({ isLoading: true, error: null });\n        try {\n          const response = await axios.get(`${API_URL}/documents`);\n          set({\n            documents: response.data.documents || [],\n            isLoading: false,\n          });\n        } catch (error: any) {\n          set({\n            error: error.response?.data?.error || 'Failed to fetch documents',\n            isLoading: false,\n          });\n        }\n      },\n\n      // Upload document\n      uploadDocument: async (\n        file: File,\n        description?: string,\n        tags?: string[]\n      ) => {\n        const fileId = `${file.name}-${Date.now()}`;\n        set({ error: null });\n\n        const formData = new FormData();\n        formData.append('file', file);\n        if (description) formData.append('description', description);\n        if (tags?.length) formData.append('tags', JSON.stringify(tags));\n\n        try {\n          // Set initial progress\n          set(state => ({\n            uploadProgress: { ...state.uploadProgress, [fileId]: 0 },\n          }));\n\n          const response = await axios.post(\n            `${API_URL}/documents/upload`,\n            formData,\n            {\n              headers: { 'Content-Type': 'multipart/form-data' },\n              onUploadProgress: progressEvent => {\n                const progress = progressEvent.total\n                  ? Math.round(\n                      (progressEvent.loaded * 100) / progressEvent.total\n                    )\n                  : 0;\n                get().setUploadProgress(fileId, progress);\n              },\n            }\n          );\n\n          // Add the new document to the list\n          get().addDocument(response.data);\n\n          // Clear upload progress\n          set(state => {\n            const { [fileId]: _, ...rest } = state.uploadProgress;\n            return { uploadProgress: rest };\n          });\n        } catch (error: any) {\n          set({\n            error: error.response?.data?.error || 'Failed to upload document',\n          });\n          // Clear upload progress on error\n          set(state => {\n            const { [fileId]: _, ...rest } = state.uploadProgress;\n            return { uploadProgress: rest };\n          });\n          throw error;\n        }\n      },\n\n      // Delete document\n      deleteDocument: async (documentId: string) => {\n        set({ error: null });\n        try {\n          await axios.delete(`${API_URL}/documents/${documentId}`);\n          get().removeDocument(documentId);\n        } catch (error: any) {\n          set({\n            error: error.response?.data?.error || 'Failed to delete document',\n          });\n          throw error;\n        }\n      },\n\n      // Set selected documents\n      setSelectedDocuments: (documentIds: string[]) => {\n        set({ selectedDocuments: documentIds });\n      },\n\n      // Toggle document selection\n      toggleDocumentSelection: (documentId: string) => {\n        set(state => ({\n          selectedDocuments: state.selectedDocuments.includes(documentId)\n            ? state.selectedDocuments.filter(id => id !== documentId)\n            : [...state.selectedDocuments, documentId],\n        }));\n      },\n\n      // Set upload progress\n      setUploadProgress: (fileId: string, progress: number) => {\n        set(state => ({\n          uploadProgress: { ...state.uploadProgress, [fileId]: progress },\n        }));\n      },\n\n      // Clear error\n      clearError: () => {\n        set({ error: null });\n      },\n\n      // Add document\n      addDocument: (document: Document) => {\n        set(state => ({\n          documents: [...state.documents, document],\n        }));\n      },\n\n      // Remove document\n      removeDocument: (documentId: string) => {\n        set(state => ({\n          documents: state.documents.filter(doc => doc.id !== documentId),\n          selectedDocuments: state.selectedDocuments.filter(\n            id => id !== documentId\n          ),\n        }));\n      },\n\n      // Clear all documents\n      clearDocuments: () => {\n        set({ documents: [], selectedDocuments: [] });\n      },\n    }),\n    {\n      name: 'documents-store',\n    }\n  )\n);\n","import { create } from 'zustand';\nimport { devtools } from 'zustand/middleware';\n\n// Types\nexport type ToastType = 'success' | 'error' | 'info' | 'warning';\n\nexport interface Toast {\n  id: string;\n  message: string;\n  type: ToastType;\n  duration?: number;\n}\n\ninterface UIState {\n  // Global error state\n  globalError: string | null;\n\n  // Toast notifications\n  toasts: Toast[];\n\n  // Loading states\n  pendingRequests: number;\n\n  // Actions\n  setGlobalError: (error: string | null) => void;\n  showToast: (message: string, type?: ToastType, duration?: number) => void;\n  removeToast: (id: string) => void;\n  clearAllToasts: () => void;\n  incrementPendingRequests: () => void;\n  decrementPendingRequests: () => void;\n\n  // Computed\n  isLoading: () => boolean;\n}\n\nexport const useUIStore = create<UIState>()(\n  devtools(\n    (set, get) => ({\n      // Initial state\n      globalError: null,\n      toasts: [],\n      pendingRequests: 0,\n\n      // Set global error\n      setGlobalError: (error: string | null) => {\n        set({ globalError: error });\n      },\n\n      // Show toast notification\n      showToast: (\n        message: string,\n        type: ToastType = 'info',\n        duration: number = 5000\n      ) => {\n        const id = `${Date.now()}-${Math.random()}`;\n        const toast: Toast = { id, message, type, duration };\n\n        set(state => ({\n          toasts: [...state.toasts, toast],\n        }));\n\n        // Auto-remove toast after duration\n        if (duration > 0) {\n          setTimeout(() => {\n            get().removeToast(id);\n          }, duration);\n        }\n      },\n\n      // Remove specific toast\n      removeToast: (id: string) => {\n        set(state => ({\n          toasts: state.toasts.filter(toast => toast.id !== id),\n        }));\n      },\n\n      // Clear all toasts\n      clearAllToasts: () => {\n        set({ toasts: [] });\n      },\n\n      // Increment pending requests\n      incrementPendingRequests: () => {\n        set(state => ({\n          pendingRequests: state.pendingRequests + 1,\n        }));\n      },\n\n      // Decrement pending requests\n      decrementPendingRequests: () => {\n        set(state => ({\n          pendingRequests: Math.max(0, state.pendingRequests - 1),\n        }));\n      },\n\n      // Check if any requests are loading\n      isLoading: () => {\n        return get().pendingRequests > 0;\n      },\n    }),\n    {\n      name: 'ui-store',\n    }\n  )\n);\n\n// Helper functions for common toast patterns\nexport const showSuccessToast = (message: string) => {\n  useUIStore.getState().showToast(message, 'success');\n};\n\nexport const showErrorToast = (message: string) => {\n  useUIStore.getState().showToast(message, 'error');\n};\n\nexport const showWarningToast = (message: string) => {\n  useUIStore.getState().showToast(message, 'warning');\n};\n\nexport const showInfoToast = (message: string) => {\n  useUIStore.getState().showToast(message, 'info');\n};\n","import React, { useEffect } from 'react';\nimport { useDocumentsStore } from '../../stores/documentsStore';\nimport { showSuccessToast, showErrorToast } from '../../stores/uiStore';\n\nconst DocumentList: React.FC = () => {\n  const {\n    documents,\n    selectedDocuments,\n    isLoading,\n    error,\n    fetchDocuments,\n    deleteDocument,\n    toggleDocumentSelection,\n    clearError,\n  } = useDocumentsStore();\n\n  useEffect(() => {\n    // Fetch documents when component mounts\n    fetchDocuments();\n  }, [fetchDocuments]);\n\n  const handleDeleteDocument = async (id: string, filename: string) => {\n    if (window.confirm(`Are you sure you want to delete ${filename}?`)) {\n      try {\n        await deleteDocument(id);\n        showSuccessToast(`Successfully deleted ${filename}`);\n      } catch (error) {\n        showErrorToast('Failed to delete document');\n      }\n    }\n  };\n\n  const handleToggleSelect = (id: string) => {\n    toggleDocumentSelection(id);\n  };\n\n  if (isLoading && documents.length === 0) {\n    return <div className=\"flex justify-center p-8\">Loading documents...</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative my-4\">\n        <span className=\"block sm:inline\">{error}</span>\n        <button\n          className=\"absolute top-0 bottom-0 right-0 px-4 py-3\"\n          onClick={clearError}\n        >\n          <span className=\"text-xl\">&times;</span>\n        </button>\n      </div>\n    );\n  }\n\n  if (documents.length === 0) {\n    return (\n      <div className=\"text-center p-8 bg-gray-50 rounded-lg\">\n        <h3 className=\"text-lg font-medium text-gray-500\">No documents yet</h3>\n        <p className=\"mt-2 text-sm text-gray-400\">\n          Upload documents to get started with analysis\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"mt-4\">\n      <h2 className=\"text-xl font-semibold mb-4\">Your Documents</h2>\n\n      <div className=\"overflow-hidden bg-white shadow sm:rounded-md\">\n        <ul className=\"divide-y divide-gray-200\">\n          {documents.map(document => (\n            <li key={document.id} className=\"relative\">\n              <div className=\"flex items-center px-4 py-4 sm:px-6 hover:bg-gray-50\">\n                <div className=\"min-w-0 flex-1 sm:flex sm:items-center sm:justify-between\">\n                  <div className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n                      checked={selectedDocuments.includes(document.id)}\n                      onChange={() => handleToggleSelect(document.id)}\n                      aria-label={`Select ${document.filename}`}\n                    />\n                    <div className=\"ml-4\">\n                      <div className=\"flex text-sm font-medium text-indigo-600 truncate\">\n                        {document.filename}\n                      </div>\n                      <div className=\"mt-2 flex\">\n                        <div className=\"flex items-center text-sm text-gray-500\">\n                          <span>\n                            {document.mime_type} •{' '}\n                            {formatFileSize(document.file_size)}\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"flex mt-1 items-center\">\n                        <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n                          uploaded\n                        </span>\n                        <span className=\"ml-2 text-xs text-gray-500\">\n                          Uploaded:{' '}\n                          {new Date(document.uploaded_at).toLocaleDateString()}\n                        </span>\n                        {document.tags && document.tags.length > 0 && (\n                          <div className=\"ml-2 flex gap-1\">\n                            {document.tags.map(tag => (\n                              <span\n                                key={tag}\n                                className=\"px-2 py-0.5 text-xs bg-gray-100 text-gray-600 rounded\"\n                              >\n                                {tag}\n                              </span>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                      {document.description && (\n                        <p className=\"mt-1 text-sm text-gray-600\">\n                          {document.description}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"ml-4 flex-shrink-0 flex\">\n                    <button\n                      onClick={() =>\n                        handleDeleteDocument(document.id, document.filename)\n                      }\n                      className=\"inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-red-700 bg-red-100 hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n                      aria-label={`Delete ${document.filename}`}\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {selectedDocuments.length > 0 && (\n        <div className=\"mt-4 p-4 bg-blue-50 rounded-lg\">\n          <p className=\"text-sm text-blue-700\">\n            {selectedDocuments.length} document\n            {selectedDocuments.length !== 1 ? 's' : ''} selected\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Helper function to format file size\nconst formatFileSize = (bytes: number): string => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\nexport default DocumentList;\n","import React, { useState, useRef, ChangeEvent } from 'react';\nimport { useDocumentsStore } from '../../stores/documentsStore';\nimport { showSuccessToast, showErrorToast } from '../../stores/uiStore';\n\nconst DocumentUpload: React.FC = () => {\n  const { uploadDocument, uploadProgress, error, clearError } =\n    useDocumentsStore();\n\n  const [dragActive, setDragActive] = useState<boolean>(false);\n  const [isUploading, setIsUploading] = useState<boolean>(false);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // Handle file selection\n  const handleFileChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files;\n    if (files && files.length > 0) {\n      handleUpload(files[0]);\n    }\n  };\n\n  // Handle drag events\n  const handleDrag = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (e.type === 'dragenter' || e.type === 'dragover') {\n      setDragActive(true);\n    } else if (e.type === 'dragleave') {\n      setDragActive(false);\n    }\n  };\n\n  // Handle drop event\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      handleUpload(e.dataTransfer.files[0]);\n    }\n  };\n\n  // Handle file upload\n  const handleUpload = async (file: File) => {\n    // Clear any previous errors\n    clearError();\n\n    // Validate file size (10MB limit)\n    const maxSize = 10 * 1024 * 1024; // 10MB\n    if (file.size > maxSize) {\n      showErrorToast('File size exceeds 10MB limit');\n      return;\n    }\n\n    setIsUploading(true);\n\n    try {\n      await uploadDocument(file);\n      showSuccessToast(`Successfully uploaded ${file.name}`);\n\n      // Reset the file input\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    } catch (error) {\n      console.error('Upload failed:', error);\n      showErrorToast('Failed to upload document');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  // Open file selector on button click\n  const openFileSelector = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  // Get the current upload progress\n  const currentProgress = Object.values(uploadProgress)[0] || 0;\n\n  return (\n    <div className=\"mt-4\">\n      <h2 className=\"text-xl font-semibold mb-4\">Upload Document</h2>\n\n      <div\n        className={`border-2 border-dashed rounded-lg p-6 text-center ${\n          dragActive\n            ? 'border-indigo-500 bg-indigo-50'\n            : 'border-gray-300 hover:border-indigo-400'\n        }`}\n        onDragEnter={handleDrag}\n        onDragLeave={handleDrag}\n        onDragOver={handleDrag}\n        onDrop={handleDrop}\n      >\n        <input\n          type=\"file\"\n          className=\"hidden\"\n          ref={fileInputRef}\n          onChange={handleFileChange}\n          accept=\".pdf,.doc,.docx,.txt,.md\"\n          aria-label=\"Upload document\"\n        />\n\n        <div className=\"space-y-2\">\n          <svg\n            className=\"mx-auto h-12 w-12 text-gray-400\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={1}\n              d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n            />\n          </svg>\n          <div className=\"flex text-sm text-gray-600\">\n            <label htmlFor=\"file-upload\" className=\"relative cursor-pointer\">\n              <span className=\"text-indigo-600 hover:text-indigo-500\">\n                Upload a file\n              </span>\n              <span className=\"pl-1\">or drag and drop</span>\n            </label>\n          </div>\n          <p className=\"text-xs text-gray-500\">\n            PDF, DOC, DOCX, TXT, MD up to 10MB\n          </p>\n        </div>\n      </div>\n\n      {isUploading && currentProgress > 0 && (\n        <div className=\"mt-4\">\n          <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n            <div\n              className=\"bg-indigo-600 h-2.5 rounded-full transition-all duration-300\"\n              style={{ width: `${currentProgress}%` }}\n            ></div>\n          </div>\n          <p className=\"text-sm text-gray-600 mt-2\">\n            Uploading: {currentProgress}%\n          </p>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"mt-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\">\n          <span className=\"block sm:inline\">{error}</span>\n          <button\n            className=\"absolute top-0 bottom-0 right-0 px-4 py-3\"\n            onClick={clearError}\n          >\n            <span className=\"text-xl\">&times;</span>\n          </button>\n        </div>\n      )}\n\n      <button\n        type=\"button\"\n        onClick={openFileSelector}\n        disabled={isUploading}\n        className={`mt-4 w-full inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white ${\n          isUploading\n            ? 'bg-gray-400 cursor-not-allowed'\n            : 'bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n        }`}\n      >\n        {isUploading ? 'Uploading...' : 'Select File'}\n      </button>\n    </div>\n  );\n};\n\nexport default DocumentUpload;\n","import React from 'react';\nimport DocumentList from '../components/documents/DocumentList';\nimport DocumentUpload from '../components/documents/DocumentUpload';\n\nconst DocumentsPage: React.FC = () => {\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold text-gray-900 mb-6\">\n        Document Management\n      </h1>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n        <div className=\"md:col-span-2\">\n          <DocumentList />\n        </div>\n        <div>\n          <DocumentUpload />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DocumentsPage;\n"],"names":["trackedConnections","getTrackedConnectionState","name","api","key","api2","extractConnectionInformation","store","extensionConnector","options","existingConnection","newConnection","removeStoreFromTrackedConnections","connectionInfo","findCallerName","stack","_a","_b","traceLines","apiSetStateLineIndex","traceLine","callerLine","devtoolsImpl","fn","devtoolsOptions","set","get","enabled","anonymousActionType","__vite_import_meta_env__","connection","connectionInformation","isRecording","state","replace","nameOrAction","r","action","setStateFromDevtools","originalIsRecording","initialState","store2","didWarnAboutReservedActionType","originalDispatch","args","message","parseJsonThen","stateFromDevtools","nextLiftedState","lastComputedState","devtools","stringified","parsed","e","API_URL","_c","useDocumentsStore","create","response","axios","error","file","description","tags","fileId","formData","progressEvent","progress","_","rest","documentId","documentIds","id","document","doc","useUIStore","type","duration","toast","showSuccessToast","showErrorToast","DocumentList","documents","selectedDocuments","isLoading","fetchDocuments","deleteDocument","toggleDocumentSelection","clearError","useEffect","handleDeleteDocument","filename","handleToggleSelect","jsx","jsxs","formatFileSize","tag","bytes","k","sizes","i","DocumentUpload","uploadDocument","uploadProgress","dragActive","setDragActive","useState","isUploading","setIsUploading","fileInputRef","useRef","handleFileChange","event","files","handleUpload","handleDrag","handleDrop","maxSize","openFileSelector","currentProgress","DocumentsPage"],"mappings":"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","x_google_ignoreList":[0]}