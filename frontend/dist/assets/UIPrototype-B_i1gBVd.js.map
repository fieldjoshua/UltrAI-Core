{"version":3,"file":"UIPrototype-B_i1gBVd.js","sources":["../../node_modules/lucide-react/dist/esm/icons/chevron-up.js","../../node_modules/lucide-react/dist/esm/icons/clipboard.js","../../node_modules/lucide-react/dist/esm/icons/info.js","../../src/components/ui/textarea.tsx","../../src/components/atoms/EnhancedPromptInput.tsx","../../src/components/atoms/ModelSelector.tsx","../../src/components/atoms/EnhancedPatternSelector.tsx","../../node_modules/@radix-ui/react-tabs/dist/index.mjs","../../src/components/ui/tabs.tsx","../../src/components/atoms/ResultsDisplay.tsx","../../src/components/AnalysisInterface.tsx","../../src/pages/UIPrototype.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.364.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ChevronUp = createLucideIcon(\"ChevronUp\", [[\"path\", { d: \"m18 15-6-6-6 6\", key: \"153udz\" }]]);\n\nexport { ChevronUp as default };\n//# sourceMappingURL=chevron-up.js.map\n","/**\n * @license lucide-react v0.364.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Clipboard = createLucideIcon(\"Clipboard\", [\n  [\"rect\", { width: \"8\", height: \"4\", x: \"8\", y: \"2\", rx: \"1\", ry: \"1\", key: \"tgr4d6\" }],\n  [\n    \"path\",\n    {\n      d: \"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\",\n      key: \"116196\"\n    }\n  ]\n]);\n\nexport { Clipboard as default };\n//# sourceMappingURL=clipboard.js.map\n","/**\n * @license lucide-react v0.364.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Info = createLucideIcon(\"Info\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M12 16v-4\", key: \"1dtifu\" }],\n  [\"path\", { d: \"M12 8h.01\", key: \"e9boi3\" }]\n]);\n\nexport { Info as default };\n//# sourceMappingURL=info.js.map\n","import React, { TextareaHTMLAttributes, forwardRef } from 'react';\n\nexport interface TextareaProps\n  extends TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className = '', ...props }, ref) => {\n    return (\n      <textarea\n        className={`flex min-h-[80px] w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 ${className}`}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\n\nTextarea.displayName = 'Textarea';\n\nexport { Textarea };\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Textarea } from '../ui/textarea';\nimport { Button } from '../ui/button';\nimport { AlertCircle } from 'lucide-react';\n\nexport interface AnalysisOptions {\n  [key: string]: any;\n}\n\nexport interface PromptInputProps {\n  onSubmit: (prompt: string, options: AnalysisOptions) => void;\n  isLoading: boolean;\n  maxLength?: number;\n  placeholder?: string;\n  initialValue?: string;\n}\n\nexport const EnhancedPromptInput: React.FC<PromptInputProps> = ({\n  onSubmit,\n  isLoading,\n  maxLength = 4000,\n  placeholder = 'Enter your prompt here...',\n  initialValue = '',\n}) => {\n  const [prompt, setPrompt] = useState(initialValue);\n  const [charCount, setCharCount] = useState(initialValue.length);\n  const [errorMessage, setErrorMessage] = useState<string | undefined>();\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    // Auto-resize the textarea\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n    }\n  }, [prompt]);\n\n  // Handle keyboard shortcut (Ctrl/Cmd + Enter)\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const value = e.target.value;\n\n    // Check if exceeding maximum length\n    if (value.length > maxLength) {\n      return;\n    }\n\n    setPrompt(value);\n    setCharCount(value.length);\n\n    // Clear error when user starts typing\n    if (errorMessage) {\n      setErrorMessage(undefined);\n    }\n  };\n\n  const handleSubmit = () => {\n    // Validate minimum length\n    if (prompt.trim().length < 10) {\n      setErrorMessage('Please enter at least 10 characters');\n      return;\n    }\n\n    // Clear any errors\n    setErrorMessage(undefined);\n\n    // Call the onSubmit prop with prompt\n    onSubmit(prompt, {});\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      <Textarea\n        ref={textareaRef}\n        value={prompt}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        placeholder={placeholder}\n        className={`min-h-[120px] transition-all duration-200 resize-none ${\n          errorMessage ? 'border-red-500 focus-visible:ring-red-500' : ''\n        }`}\n        disabled={isLoading}\n        aria-invalid={!!errorMessage}\n        aria-describedby={errorMessage ? 'prompt-error' : undefined}\n      />\n\n      {/* Character counter and error message */}\n      <div className=\"flex justify-between text-sm\">\n        <div>\n          {errorMessage && (\n            <div\n              id=\"prompt-error\"\n              className=\"flex items-center text-red-600\"\n              role=\"alert\"\n            >\n              <AlertCircle className=\"h-4 w-4 mr-1\" />\n              <span>{errorMessage}</span>\n            </div>\n          )}\n        </div>\n        <div\n          className={`text-right ${\n            charCount > maxLength * 0.9 ? 'text-amber-600' : 'text-gray-500'\n          }`}\n        >\n          {charCount}/{maxLength}\n        </div>\n      </div>\n\n      {/* Submit button */}\n      <div className=\"flex justify-end\">\n        <Button\n          onClick={handleSubmit}\n          disabled={isLoading || !prompt.trim() || !!errorMessage}\n          isLoading={isLoading}\n          variant=\"primary\"\n        >\n          {isLoading ? 'Analyzing...' : 'Submit'}\n        </Button>\n        <div className=\"text-xs text-gray-500 mt-1 ml-2\">\n          Press Ctrl+Enter to submit\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EnhancedPromptInput;\n","import React, { useState, useMemo } from 'react';\nimport { Label } from '../ui/label';\nimport { Checkbox } from '../ui/checkbox';\nimport { Card } from '../ui/card';\nimport { ChevronDown, ChevronUp, Info } from 'lucide-react';\n\nexport interface Model {\n  id: string;\n  name: string;\n  provider: string;\n  description?: string;\n  capabilities?: string[];\n  isAvailable: boolean;\n}\n\nexport interface ModelSelectorProps {\n  availableModels: Model[];\n  selectedModels: string[];\n  onSelectionChange: (modelIds: string[]) => void;\n  isLoading: boolean;\n  error?: Error;\n  maxSelections?: number;\n}\n\nexport const ModelSelector: React.FC<ModelSelectorProps> = ({\n  availableModels,\n  selectedModels,\n  onSelectionChange,\n  isLoading,\n  error,\n  maxSelections = 5,\n}) => {\n  // Group models by provider\n  const groupedModels = useMemo(() => {\n    const groups: Record<string, Model[]> = {};\n\n    availableModels.forEach((model) => {\n      if (!groups[model.provider]) {\n        groups[model.provider] = [];\n      }\n      groups[model.provider].push(model);\n    });\n\n    return groups;\n  }, [availableModels]);\n\n  // State for expanded/collapsed provider sections\n  const [expanded, setExpanded] = useState<Record<string, boolean>>(() => {\n    const initial: Record<string, boolean> = {};\n    // Default to expanding all provider groups\n    Object.keys(groupedModels).forEach((provider) => {\n      initial[provider] = true;\n    });\n    return initial;\n  });\n\n  // Toggle model selection\n  const toggleModel = (modelId: string) => {\n    if (selectedModels.includes(modelId)) {\n      // Remove model from selection\n      onSelectionChange(selectedModels.filter((id) => id !== modelId));\n    } else {\n      // Add model to selection if under max limit\n      if (selectedModels.length < maxSelections) {\n        onSelectionChange([...selectedModels, modelId]);\n      }\n    }\n  };\n\n  // Toggle provider expansion\n  const toggleProvider = (provider: string) => {\n    setExpanded((prev) => ({\n      ...prev,\n      [provider]: !prev[provider],\n    }));\n  };\n\n  // Select all models in a provider group\n  const selectAllInProvider = (provider: string) => {\n    const modelIds = groupedModels[provider]\n      .filter((model) => model.isAvailable)\n      .map((model) => model.id);\n\n    // Only add models up to max selections\n    const currentSelected = [...selectedModels];\n\n    // Remove any currently selected models from this provider\n    const filteredSelected = currentSelected.filter(\n      (id) => !modelIds.includes(id)\n    );\n\n    // Add as many models as we can from this provider\n    const availableSlots = maxSelections - filteredSelected.length;\n    const modelsToAdd = modelIds.slice(0, availableSlots);\n\n    onSelectionChange([...filteredSelected, ...modelsToAdd]);\n  };\n\n  // Clear all selections from a provider\n  const clearProvider = (provider: string) => {\n    const modelIds = groupedModels[provider].map((model) => model.id);\n    onSelectionChange(selectedModels.filter((id) => !modelIds.includes(id)));\n  };\n\n  // Check if all models in a provider are selected\n  const isProviderFullySelected = (provider: string) => {\n    const availableModelIds = groupedModels[provider]\n      .filter((model) => model.isAvailable)\n      .map((model) => model.id);\n\n    return availableModelIds.every((id) => selectedModels.includes(id));\n  };\n\n  // Count selected models in a provider\n  const countSelectedInProvider = (provider: string) => {\n    const modelIds = groupedModels[provider].map((model) => model.id);\n    return selectedModels.filter((id) => modelIds.includes(id)).length;\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-6 bg-gray-200 rounded w-1/3 mb-4\"></div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n            {[1, 2, 3, 4].map((i) => (\n              <div key={i} className=\"h-24 bg-gray-200 rounded\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-4 bg-red-50 border border-red-200 rounded-md text-red-700\">\n        Error loading models: {error.message}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-between items-center\">\n        <Label className=\"text-base font-medium\">Select AI Models</Label>\n        <div className=\"text-sm text-gray-500\">\n          {selectedModels.length} of {maxSelections} selected\n        </div>\n      </div>\n\n      {Object.keys(groupedModels).length === 0 ? (\n        <div className=\"p-4 bg-gray-50 border border-gray-200 rounded-md text-gray-500\">\n          No models available.\n        </div>\n      ) : (\n        <div className=\"space-y-4\">\n          {Object.entries(groupedModels).map(([provider, models]) => (\n            <div\n              key={provider}\n              className=\"border border-gray-200 rounded-md overflow-hidden\"\n            >\n              {/* Provider header */}\n              <div\n                className=\"bg-gray-50 p-3 flex justify-between items-center cursor-pointer\"\n                onClick={() => toggleProvider(provider)}\n              >\n                <div className=\"flex items-center\">\n                  <div className=\"font-medium\">{provider}</div>\n                  <div className=\"ml-2 text-sm text-gray-500\">\n                    ({countSelectedInProvider(provider)} of{' '}\n                    {models.filter((m) => m.isAvailable).length} selected)\n                  </div>\n                </div>\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"flex space-x-2\">\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        selectAllInProvider(provider);\n                      }}\n                      className=\"text-xs px-2 py-1 bg-gray-200 hover:bg-gray-300 rounded\"\n                    >\n                      Select All\n                    </button>\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        clearProvider(provider);\n                      }}\n                      className=\"text-xs px-2 py-1 bg-gray-200 hover:bg-gray-300 rounded\"\n                    >\n                      Clear\n                    </button>\n                  </div>\n                  {expanded[provider] ? (\n                    <ChevronUp size={18} />\n                  ) : (\n                    <ChevronDown size={18} />\n                  )}\n                </div>\n              </div>\n\n              {/* Models in this provider */}\n              {expanded[provider] && (\n                <div className=\"p-3 space-y-2 bg-white\">\n                  {models.map((model) => (\n                    <div\n                      key={model.id}\n                      className={`\n                        flex items-center p-2 rounded-md\n                        ${model.isAvailable ? 'cursor-pointer hover:bg-gray-50' : 'opacity-50 cursor-not-allowed'}\n                        ${selectedModels.includes(model.id) ? 'bg-blue-50 border border-blue-100' : ''}\n                      `}\n                      onClick={() => model.isAvailable && toggleModel(model.id)}\n                    >\n                      <Checkbox\n                        checked={selectedModels.includes(model.id)}\n                        onCheckedChange={() =>\n                          model.isAvailable && toggleModel(model.id)\n                        }\n                        disabled={\n                          !model.isAvailable ||\n                          (selectedModels.length >= maxSelections &&\n                            !selectedModels.includes(model.id))\n                        }\n                        className=\"mr-3\"\n                      />\n                      <div className=\"flex-grow\">\n                        <div className=\"font-medium\">{model.name}</div>\n                        {model.description && (\n                          <div className=\"text-sm text-gray-500\">\n                            {model.description}\n                          </div>\n                        )}\n                      </div>\n\n                      {model.capabilities && model.capabilities.length > 0 && (\n                        <div className=\"tooltip-container relative flex items-center\">\n                          <Info\n                            size={16}\n                            className=\"text-gray-400 cursor-help\"\n                          />\n                          <div className=\"tooltip absolute bottom-full right-0 mb-2 w-64 p-2 bg-gray-800 text-white text-xs rounded shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-opacity z-10\">\n                            <div className=\"font-semibold mb-1\">\n                              Capabilities:\n                            </div>\n                            <ul className=\"list-disc pl-4\">\n                              {model.capabilities.map((capability, idx) => (\n                                <li key={idx}>{capability}</li>\n                              ))}\n                            </ul>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Selection limit warning */}\n      {selectedModels.length >= maxSelections && (\n        <div className=\"text-sm text-amber-600 bg-amber-50 p-2 rounded-md border border-amber-200\">\n          Maximum model selection limit reached ({maxSelections}).\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ModelSelector;\n","import React, { useState } from 'react';\nimport { Card } from '../ui/card';\nimport { ChevronDown, ChevronUp, Info } from 'lucide-react';\n\nexport interface PatternConfigOption {\n  id: string;\n  name: string;\n  type: 'boolean' | 'select' | 'range';\n  default: any;\n  options?: any[];\n}\n\nexport interface AnalysisPattern {\n  id: string;\n  name: string;\n  description: string;\n  useCases: string[];\n  configOptions?: PatternConfigOption[];\n}\n\nexport interface PatternSelectorProps {\n  availablePatterns: AnalysisPattern[];\n  selectedPattern: string;\n  onPatternChange: (patternId: string) => void;\n  isLoading: boolean;\n  error?: Error;\n}\n\nexport const EnhancedPatternSelector: React.FC<PatternSelectorProps> = ({\n  availablePatterns,\n  selectedPattern,\n  onPatternChange,\n  isLoading,\n  error,\n}) => {\n  const [expandedDetail, setExpandedDetail] = useState<string | null>(null);\n\n  const toggleDetails = (patternId: string) => {\n    if (expandedDetail === patternId) {\n      setExpandedDetail(null);\n    } else {\n      setExpandedDetail(patternId);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-6 bg-gray-200 rounded w-1/3 mb-4\"></div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n            {[1, 2, 3, 4].map((i) => (\n              <div key={i} className=\"h-32 bg-gray-200 rounded\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-4 bg-red-50 border border-red-200 rounded-md text-red-700\">\n        Error loading analysis patterns: {error.message}\n      </div>\n    );\n  }\n\n  if (availablePatterns.length === 0) {\n    return (\n      <div className=\"p-4 bg-gray-50 border border-gray-200 rounded-md text-gray-500\">\n        No analysis patterns available.\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"text-base font-medium mb-2\">Select Analysis Pattern</div>\n      <p className=\"text-sm text-gray-600 mb-4\">\n        Choose how the models should collaborate on your analysis. Each pattern\n        represents a different approach to working with multiple AI models.\n      </p>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n        {availablePatterns.map((pattern) => {\n          const isSelected = selectedPattern === pattern.id;\n          const isExpanded = expandedDetail === pattern.id;\n\n          return (\n            <Card\n              key={pattern.id}\n              className={`\n                overflow-hidden transition-all duration-200\n                ${isSelected ? 'ring-2 ring-blue-500' : 'hover:border-gray-300'}\n              `}\n            >\n              {/* Pattern header */}\n              <div\n                className={`\n                  p-4 cursor-pointer\n                  ${isSelected ? 'bg-blue-50 border-blue-100' : 'bg-white'}\n                `}\n                onClick={() => onPatternChange(pattern.id)}\n              >\n                <div className=\"flex justify-between items-start\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"flex items-center h-5\">\n                      <input\n                        type=\"radio\"\n                        checked={isSelected}\n                        onChange={() => onPatternChange(pattern.id)}\n                        className=\"h-4 w-4 text-blue-600 border-gray-300 focus:ring-blue-500\"\n                        aria-labelledby={`pattern-${pattern.id}-label`}\n                      />\n                    </div>\n                    <div className=\"flex-1\">\n                      <h3\n                        id={`pattern-${pattern.id}-label`}\n                        className=\"text-lg font-medium text-gray-900\"\n                      >\n                        {pattern.name}\n                      </h3>\n                      <p className=\"text-sm text-gray-500 mt-1\">\n                        {pattern.description}\n                      </p>\n                    </div>\n                  </div>\n\n                  <button\n                    type=\"button\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      toggleDetails(pattern.id);\n                    }}\n                    className=\"ml-2 text-gray-400 hover:text-gray-500\"\n                    aria-label={isExpanded ? 'Hide details' : 'Show details'}\n                  >\n                    {isExpanded ? (\n                      <ChevronUp className=\"h-5 w-5\" />\n                    ) : (\n                      <ChevronDown className=\"h-5 w-5\" />\n                    )}\n                  </button>\n                </div>\n              </div>\n\n              {/* Pattern details */}\n              {isExpanded && (\n                <div className=\"px-4 py-3 bg-gray-50 border-t border-gray-100\">\n                  {pattern.useCases.length > 0 && (\n                    <div className=\"mb-3\">\n                      <h4 className=\"text-sm font-medium text-gray-700 mb-1\">\n                        Best used for:\n                      </h4>\n                      <ul className=\"space-y-1\">\n                        {pattern.useCases.map((useCase, index) => (\n                          <li\n                            key={index}\n                            className=\"text-sm text-gray-600 flex items-start\"\n                          >\n                            <span className=\"text-blue-500 mr-2\">•</span>\n                            {useCase}\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  )}\n\n                  {pattern.configOptions &&\n                    pattern.configOptions.length > 0 && (\n                      <div>\n                        <h4 className=\"text-sm font-medium text-gray-700 mb-2\">\n                          Configuration options:\n                        </h4>\n                        <div className=\"space-y-2\">\n                          {pattern.configOptions.map((option) => (\n                            <div key={option.id} className=\"flex items-center\">\n                              <div className=\"text-sm text-gray-600\">\n                                {option.name}:\n                              </div>\n                              {option.type === 'boolean' && (\n                                <label className=\"inline-flex items-center ml-3\">\n                                  <input\n                                    type=\"checkbox\"\n                                    className=\"rounded text-blue-600\"\n                                    defaultChecked={option.default}\n                                  />\n                                </label>\n                              )}\n                              {option.type === 'select' && option.options && (\n                                <select\n                                  className=\"ml-2 text-sm border-gray-300 rounded-md\"\n                                  defaultValue={option.default}\n                                >\n                                  {option.options.map((opt, i) => (\n                                    <option key={i} value={opt.value || opt}>\n                                      {opt.label || opt}\n                                    </option>\n                                  ))}\n                                </select>\n                              )}\n                              {option.type === 'range' && (\n                                <input\n                                  type=\"range\"\n                                  className=\"ml-2\"\n                                  defaultValue={option.default}\n                                  min={option.options?.[0] || 0}\n                                  max={option.options?.[1] || 100}\n                                />\n                              )}\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                </div>\n              )}\n            </Card>\n          );\n        })}\n      </div>\n\n      {/* Comparison tooltip */}\n      <div className=\"mt-6 text-sm flex items-center text-gray-500\">\n        <Info className=\"h-4 w-4 mr-1\" />\n        <span>\n          Not sure which pattern to choose? The \"Gut Check Analysis\" pattern is\n          a good starting point for most analyses.\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default EnhancedPatternSelector;\n","\"use client\";\n\n// src/tabs.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { createRovingFocusGroupScope } from \"@radix-ui/react-roving-focus\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport * as RovingFocusGroup from \"@radix-ui/react-roving-focus\";\nimport { useDirection } from \"@radix-ui/react-direction\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useId } from \"@radix-ui/react-id\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TABS_NAME = \"Tabs\";\nvar [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [\n  createRovingFocusGroupScope\n]);\nvar useRovingFocusGroupScope = createRovingFocusGroupScope();\nvar [TabsProvider, useTabsContext] = createTabsContext(TABS_NAME);\nvar Tabs = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeTabs,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = \"horizontal\",\n      dir,\n      activationMode = \"automatic\",\n      ...tabsProps\n    } = props;\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue ?? \"\",\n      caller: TABS_NAME\n    });\n    return /* @__PURE__ */ jsx(\n      TabsProvider,\n      {\n        scope: __scopeTabs,\n        baseId: useId(),\n        value,\n        onValueChange: setValue,\n        orientation,\n        dir: direction,\n        activationMode,\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            dir: direction,\n            \"data-orientation\": orientation,\n            ...tabsProps,\n            ref: forwardedRef\n          }\n        )\n      }\n    );\n  }\n);\nTabs.displayName = TABS_NAME;\nvar TAB_LIST_NAME = \"TabsList\";\nvar TabsList = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeTabs, loop = true, ...listProps } = props;\n    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    return /* @__PURE__ */ jsx(\n      RovingFocusGroup.Root,\n      {\n        asChild: true,\n        ...rovingFocusGroupScope,\n        orientation: context.orientation,\n        dir: context.dir,\n        loop,\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            role: \"tablist\",\n            \"aria-orientation\": context.orientation,\n            ...listProps,\n            ref: forwardedRef\n          }\n        )\n      }\n    );\n  }\n);\nTabsList.displayName = TAB_LIST_NAME;\nvar TRIGGER_NAME = \"TabsTrigger\";\nvar TabsTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;\n    const context = useTabsContext(TRIGGER_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return /* @__PURE__ */ jsx(\n      RovingFocusGroup.Item,\n      {\n        asChild: true,\n        ...rovingFocusGroupScope,\n        focusable: !disabled,\n        active: isSelected,\n        children: /* @__PURE__ */ jsx(\n          Primitive.button,\n          {\n            type: \"button\",\n            role: \"tab\",\n            \"aria-selected\": isSelected,\n            \"aria-controls\": contentId,\n            \"data-state\": isSelected ? \"active\" : \"inactive\",\n            \"data-disabled\": disabled ? \"\" : void 0,\n            disabled,\n            id: triggerId,\n            ...triggerProps,\n            ref: forwardedRef,\n            onMouseDown: composeEventHandlers(props.onMouseDown, (event) => {\n              if (!disabled && event.button === 0 && event.ctrlKey === false) {\n                context.onValueChange(value);\n              } else {\n                event.preventDefault();\n              }\n            }),\n            onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {\n              if ([\" \", \"Enter\"].includes(event.key)) context.onValueChange(value);\n            }),\n            onFocus: composeEventHandlers(props.onFocus, () => {\n              const isAutomaticActivation = context.activationMode !== \"manual\";\n              if (!isSelected && !disabled && isAutomaticActivation) {\n                context.onValueChange(value);\n              }\n            })\n          }\n        )\n      }\n    );\n  }\n);\nTabsTrigger.displayName = TRIGGER_NAME;\nvar CONTENT_NAME = \"TabsContent\";\nvar TabsContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeTabs, value, forceMount, children, ...contentProps } = props;\n    const context = useTabsContext(CONTENT_NAME, __scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    const isMountAnimationPreventedRef = React.useRef(isSelected);\n    React.useEffect(() => {\n      const rAF = requestAnimationFrame(() => isMountAnimationPreventedRef.current = false);\n      return () => cancelAnimationFrame(rAF);\n    }, []);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || isSelected, children: ({ present }) => /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"data-state\": isSelected ? \"active\" : \"inactive\",\n        \"data-orientation\": context.orientation,\n        role: \"tabpanel\",\n        \"aria-labelledby\": triggerId,\n        hidden: !present,\n        id: contentId,\n        tabIndex: 0,\n        ...contentProps,\n        ref: forwardedRef,\n        style: {\n          ...props.style,\n          animationDuration: isMountAnimationPreventedRef.current ? \"0s\" : void 0\n        },\n        children: present && children\n      }\n    ) });\n  }\n);\nTabsContent.displayName = CONTENT_NAME;\nfunction makeTriggerId(baseId, value) {\n  return `${baseId}-trigger-${value}`;\n}\nfunction makeContentId(baseId, value) {\n  return `${baseId}-content-${value}`;\n}\nvar Root2 = Tabs;\nvar List = TabsList;\nvar Trigger = TabsTrigger;\nvar Content = TabsContent;\nexport {\n  Content,\n  List,\n  Root2 as Root,\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n  Trigger,\n  createTabsScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from 'react';\nimport * as TabsPrimitive from '@radix-ui/react-tabs';\n\nimport { cn } from '../../lib/utils';\n\nconst Tabs = TabsPrimitive.Root;\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      'inline-flex items-center justify-center rounded-md bg-muted p-1 text-muted-foreground',\n      className\n    )}\n    {...props}\n  />\n));\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      'inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm',\n      className\n    )}\n    {...props}\n  />\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      'mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n      className\n    )}\n    {...props}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\n","import React, { useState } from 'react';\nimport { Card } from '../ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../ui/tabs';\nimport {\n  Clipboard,\n  Download,\n  ChevronDown,\n  ChevronUp,\n  Code,\n  FileText,\n  ExternalLink,\n} from 'lucide-react';\nimport { Button } from '../ui/button';\n\nexport interface AnalysisResult {\n  modelId: string;\n  modelName: string;\n  content: string;\n  timestamp: string;\n  processingTimeMs: number;\n  sections?: {\n    id: string;\n    title: string;\n    content: string;\n  }[];\n  metadata?: Record<string, any>;\n}\n\nexport interface ResultsDisplayProps {\n  results: AnalysisResult[];\n  isLoading: boolean;\n  error?: Error;\n  comparisonMode?: boolean;\n}\n\nexport const ResultsDisplay: React.FC<ResultsDisplayProps> = ({\n  results,\n  isLoading,\n  error,\n  comparisonMode = false,\n}) => {\n  const [activeTab, setActiveTab] = useState<string>(\n    results.length > 0 ? results[0].modelId : 'comparison'\n  );\n  const [expandedSections, setExpandedSections] = useState<string[]>([]);\n  const [viewMode, setViewMode] = useState<'standard' | 'compact' | 'detailed'>(\n    'standard'\n  );\n\n  const toggleSection = (sectionId: string) => {\n    if (expandedSections.includes(sectionId)) {\n      setExpandedSections(expandedSections.filter((id) => id !== sectionId));\n    } else {\n      setExpandedSections([...expandedSections, sectionId]);\n    }\n  };\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n    // Could add a toast notification here\n  };\n\n  const downloadAsFile = (\n    content: string,\n    filename: string,\n    format: 'txt' | 'md' = 'txt'\n  ) => {\n    const element = document.createElement('a');\n    const file = new Blob([content], { type: 'text/plain' });\n    element.href = URL.createObjectURL(file);\n    element.download = `${filename}.${format}`;\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  };\n\n  const formatModelName = (modelId: string, modelName?: string): string => {\n    if (modelName) return modelName;\n\n    // If no model name is provided, format the ID\n    const modelMap: Record<string, string> = {\n      gpt4o: 'GPT-4o',\n      gpt4: 'GPT-4',\n      'claude-3-opus': 'Claude 3 Opus',\n      'claude-3-sonnet': 'Claude 3 Sonnet',\n      'gemini-pro': 'Gemini Pro',\n      llama3: 'Llama 3',\n    };\n\n    return modelMap[modelId] || modelId;\n  };\n\n  const renderContent = (content: string) => {\n    // Simple regex to detect code blocks and add syntax highlighting\n    const codeBlockRegex = /```(\\w*)\\n([\\s\\S]*?)```/g;\n    const parts = [];\n    let lastIndex = 0;\n    let match;\n\n    while ((match = codeBlockRegex.exec(content)) !== null) {\n      // Add text before code block\n      if (match.index > lastIndex) {\n        parts.push(\n          <p key={`text-${lastIndex}`} className=\"whitespace-pre-wrap mb-4\">\n            {content.slice(lastIndex, match.index)}\n          </p>\n        );\n      }\n\n      // Add code block with syntax highlighting\n      const language = match[1] || 'plaintext';\n      const code = match[2];\n      parts.push(\n        <div key={`code-${match.index}`} className=\"relative mb-4\">\n          <div className=\"absolute right-2 top-2 flex space-x-1\">\n            <button\n              onClick={() => copyToClipboard(code)}\n              className=\"p-1 rounded bg-gray-800 text-gray-200 hover:bg-gray-700\"\n              aria-label=\"Copy code\"\n            >\n              <Clipboard size={14} />\n            </button>\n          </div>\n          <div className=\"bg-gray-900 text-gray-100 p-3 rounded-md overflow-x-auto\">\n            <div className=\"text-xs text-gray-400 pb-2\">{language}</div>\n            <pre className=\"font-mono text-sm\">\n              <code>{code}</code>\n            </pre>\n          </div>\n        </div>\n      );\n\n      lastIndex = match.index + match[0].length;\n    }\n\n    // Add remaining text after the last code block\n    if (lastIndex < content.length) {\n      parts.push(\n        <p key={`text-${lastIndex}`} className=\"whitespace-pre-wrap\">\n          {content.slice(lastIndex)}\n        </p>\n      );\n    }\n\n    return <div className=\"text-gray-800\">{parts}</div>;\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"animate-pulse space-y-4\">\n        <div className=\"h-8 bg-gray-200 rounded w-1/4 mb-4\"></div>\n        <div className=\"h-64 bg-gray-200 rounded\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-4 bg-red-50 border border-red-200 rounded-md text-red-700\">\n        Error displaying results: {error.message}\n      </div>\n    );\n  }\n\n  if (results.length === 0) {\n    return (\n      <div className=\"text-center p-8 bg-gray-50 border border-gray-200 rounded-md\">\n        <div className=\"text-gray-500\">No results to display</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-xl font-semibold\">Analysis Results</h2>\n        <div className=\"flex items-center space-x-2\">\n          <select\n            value={viewMode}\n            onChange={(e) => setViewMode(e.target.value as any)}\n            className=\"text-sm border border-gray-300 rounded-md px-2 py-1\"\n          >\n            <option value=\"standard\">Standard View</option>\n            <option value=\"compact\">Compact View</option>\n            <option value=\"detailed\">Detailed View</option>\n          </select>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() =>\n              downloadAsFile(\n                results\n                  .map(\n                    (r) =>\n                      `# ${formatModelName(r.modelId, r.modelName)}\\n\\n${r.content}`\n                  )\n                  .join('\\n\\n---\\n\\n'),\n                'ultra-analysis-results',\n                'md'\n              )\n            }\n          >\n            <Download size={16} className=\"mr-1\" />\n            Export\n          </Button>\n        </div>\n      </div>\n\n      <Tabs\n        defaultValue={activeTab}\n        onValueChange={setActiveTab}\n        className=\"w-full\"\n      >\n        <TabsList className=\"w-full flex overflow-x-auto mb-2\">\n          {results.map((result) => (\n            <TabsTrigger\n              key={result.modelId}\n              value={result.modelId}\n              className=\"flex-1 min-w-max\"\n            >\n              {formatModelName(result.modelId, result.modelName)}\n            </TabsTrigger>\n          ))}\n          {results.length > 1 && (\n            <TabsTrigger value=\"comparison\" className=\"flex-1 min-w-max\">\n              Side-by-Side\n            </TabsTrigger>\n          )}\n        </TabsList>\n\n        {/* Individual model tabs */}\n        {results.map((result) => (\n          <TabsContent\n            key={result.modelId}\n            value={result.modelId}\n            className=\"mt-4\"\n          >\n            <Card className=\"p-4\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <div>\n                  <h3 className=\"text-lg font-medium\">\n                    {formatModelName(result.modelId, result.modelName)}\n                  </h3>\n                  <div className=\"text-sm text-gray-500\">\n                    {new Date(result.timestamp).toLocaleString()} •\n                    {(result.processingTimeMs / 1000).toFixed(2)}s processing\n                    time\n                  </div>\n                </div>\n                <div className=\"flex space-x-2\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => copyToClipboard(result.content)}\n                  >\n                    <Clipboard size={16} className=\"mr-1\" />\n                    Copy\n                  </Button>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() =>\n                      downloadAsFile(\n                        result.content,\n                        `${result.modelId}-analysis`,\n                        'txt'\n                      )\n                    }\n                  >\n                    <FileText size={16} className=\"mr-1\" />\n                    Save\n                  </Button>\n                </div>\n              </div>\n\n              {/* Sectioned content */}\n              {result.sections && result.sections.length > 0 ? (\n                <div className=\"space-y-4\">\n                  {result.sections.map((section) => {\n                    const isExpanded = expandedSections.includes(section.id);\n\n                    return (\n                      <div\n                        key={section.id}\n                        className=\"border rounded-md overflow-hidden\"\n                      >\n                        <div\n                          className=\"bg-gray-100 px-4 py-2 flex justify-between items-center cursor-pointer\"\n                          onClick={() => toggleSection(section.id)}\n                        >\n                          <h4 className=\"font-medium\">{section.title}</h4>\n                          {isExpanded ? (\n                            <ChevronUp size={18} />\n                          ) : (\n                            <ChevronDown size={18} />\n                          )}\n                        </div>\n                        {isExpanded && (\n                          <div className=\"p-4\">\n                            {renderContent(section.content)}\n                          </div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div className=\"prose max-w-none\">\n                  {renderContent(result.content)}\n                </div>\n              )}\n\n              {/* Show metadata if in detailed view */}\n              {viewMode === 'detailed' && result.metadata && (\n                <div className=\"mt-6 pt-4 border-t\">\n                  <h4 className=\"text-sm font-medium text-gray-700 mb-2\">\n                    Metadata\n                  </h4>\n                  <pre className=\"text-xs bg-gray-50 p-3 rounded overflow-auto\">\n                    {JSON.stringify(result.metadata, null, 2)}\n                  </pre>\n                </div>\n              )}\n            </Card>\n          </TabsContent>\n        ))}\n\n        {/* Comparison tab */}\n        {results.length > 1 && (\n          <TabsContent value=\"comparison\" className=\"mt-4\">\n            <div\n              className={`grid ${viewMode === 'compact' ? 'grid-cols-1' : 'grid-cols-1 lg:grid-cols-2'} gap-4`}\n            >\n              {results.map((result) => (\n                <Card\n                  key={result.modelId}\n                  className=\"p-4 h-full overflow-hidden\"\n                >\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <h3 className=\"text-lg font-medium\">\n                      {formatModelName(result.modelId, result.modelName)}\n                    </h3>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => copyToClipboard(result.content)}\n                    >\n                      <Clipboard size={16} />\n                    </Button>\n                  </div>\n                  <div\n                    className={`prose max-w-none ${viewMode === 'compact' ? 'max-h-64 overflow-y-auto' : ''}`}\n                  >\n                    {renderContent(result.content)}\n                  </div>\n                </Card>\n              ))}\n            </div>\n          </TabsContent>\n        )}\n      </Tabs>\n    </div>\n  );\n};\n\nexport default ResultsDisplay;\n","import React, { useState, useEffect } from 'react';\nimport EnhancedPromptInput from './atoms/EnhancedPromptInput';\nimport ModelSelector from './atoms/ModelSelector';\nimport EnhancedPatternSelector from './atoms/EnhancedPatternSelector';\nimport ResultsDisplay from './atoms/ResultsDisplay';\nimport AnalysisProgress from './atoms/AnalysisProgress';\nimport { Card } from './ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs';\nimport { Alert, AlertTitle, AlertDescription } from './ui/alert';\nimport { AlertCircle } from 'lucide-react';\n\n// Types from components\nimport type { AnalysisOptions } from './atoms/EnhancedPromptInput';\nimport type { Model } from './atoms/ModelSelector';\nimport type { AnalysisPattern } from './atoms/EnhancedPatternSelector';\nimport type { AnalysisResult } from './atoms/ResultsDisplay';\n\n// Mock API functions - replace with actual API calls\nconst fetchModels = async (): Promise<Model[]> => {\n  // Simulated API delay\n  await new Promise((resolve) => setTimeout(resolve, 1000));\n\n  return [\n    {\n      id: 'gpt4o',\n      name: 'GPT-4o',\n      provider: 'OpenAI',\n      description: 'Most capable language model from OpenAI',\n      capabilities: ['Text generation', 'Reasoning', 'Creative writing'],\n      isAvailable: true,\n    },\n    {\n      id: 'gpt4',\n      name: 'GPT-4',\n      provider: 'OpenAI',\n      description: 'Powerful language model with strong reasoning',\n      capabilities: ['Text generation', 'Reasoning'],\n      isAvailable: true,\n    },\n    {\n      id: 'claude3opus',\n      name: 'Claude 3 Opus',\n      provider: 'Anthropic',\n      description: \"Anthropic's most powerful model\",\n      capabilities: ['Text generation', 'Reasoning', 'Long context'],\n      isAvailable: true,\n    },\n    {\n      id: 'claude3sonnet',\n      name: 'Claude 3 Sonnet',\n      provider: 'Anthropic',\n      description: 'Balanced model for everyday tasks',\n      capabilities: ['Text generation', 'Reasoning'],\n      isAvailable: true,\n    },\n    {\n      id: 'gemini-pro',\n      name: 'Gemini Pro',\n      provider: 'Google',\n      description: \"Google's large multimodal model\",\n      capabilities: ['Text generation', 'Code generation'],\n      isAvailable: true,\n    },\n    {\n      id: 'llama3',\n      name: 'Llama 3',\n      provider: 'Meta',\n      description: 'Open weights model with strong capabilities',\n      capabilities: ['Text generation'],\n      isAvailable: true,\n    },\n  ];\n};\n\nconst fetchPatterns = async (): Promise<AnalysisPattern[]> => {\n  // Simulated API delay\n  await new Promise((resolve) => setTimeout(resolve, 800));\n\n  return [\n    {\n      id: 'gut',\n      name: 'Gut Check Analysis',\n      description:\n        'Rapid evaluation of different perspectives to identify the most likely correct answer',\n      useCases: [\n        'Fact-based queries',\n        'Questions with objective answers',\n        'Time-sensitive analysis',\n      ],\n    },\n    {\n      id: 'confidence',\n      name: 'Confidence Analysis',\n      description:\n        'Evaluates the strength of each model response with confidence scoring',\n      useCases: [\n        'Uncertain queries',\n        'Risk assessment',\n        'Multiple possible interpretations',\n      ],\n    },\n    {\n      id: 'critique',\n      name: 'Critique Analysis',\n      description:\n        \"Models critically evaluate each other's reasoning and answers\",\n      useCases: [\n        'Complex reasoning tasks',\n        'Checks for logical flaws',\n        'Rigorous evaluation',\n      ],\n    },\n    {\n      id: 'fact_check',\n      name: 'Fact Check Analysis',\n      description: 'Verifies factual accuracy and cites sources for claims',\n      useCases: [\n        'Research topics',\n        'Checking controversial claims',\n        'Educational content',\n      ],\n    },\n    {\n      id: 'perspective',\n      name: 'Perspective Analysis',\n      description: 'Examines a question from multiple analytical perspectives',\n      useCases: ['Complex problems', 'Multifaceted issues', 'Decision making'],\n    },\n  ];\n};\n\nconst submitAnalysis = async (\n  prompt: string,\n  selectedModels: string[],\n  selectedPattern: string,\n  options: AnalysisOptions\n): Promise<{\n  status: string;\n  results: AnalysisResult[];\n}> => {\n  // Simulate a multi-step analysis process with updates\n  await new Promise((resolve) => setTimeout(resolve, 2000));\n\n  return {\n    status: 'complete',\n    results: selectedModels.map((modelId) => ({\n      modelId,\n      modelName:\n        modelId === 'gpt4o'\n          ? 'GPT-4o'\n          : modelId === 'claude3opus'\n            ? 'Claude 3 Opus'\n            : modelId === 'gemini-pro'\n              ? 'Gemini Pro'\n              : modelId,\n      content: `This is a simulated analysis response from ${modelId} using the ${selectedPattern} pattern.\\n\\nThe prompt was: \"${prompt}\"\\n\\nIn a real implementation, this would contain the actual model response. It would include detailed analysis based on the selected pattern.\\n\\n## Key Points\\n\\n- First important point from analysis\\n- Second important consideration\\n- Additional context or clarification\\n\\n## Conclusion\\n\\nThis is the conclusion based on the analysis.`,\n      timestamp: new Date().toISOString(),\n      processingTimeMs: Math.floor(Math.random() * 3000) + 1000,\n      sections: [\n        {\n          id: 'analysis',\n          title: 'Analysis',\n          content: `This is the main analysis section for the prompt: \"${prompt}\"`,\n        },\n        {\n          id: 'key-points',\n          title: 'Key Points',\n          content:\n            '- Important point 1\\n- Important point 2\\n- Important point 3',\n        },\n        {\n          id: 'conclusion',\n          title: 'Conclusion',\n          content: 'This is the conclusion based on the analysis.',\n        },\n      ],\n      metadata: {\n        modelVersion: '1.0',\n        tokenCount: Math.floor(Math.random() * 1000) + 500,\n        pattern: selectedPattern,\n        options,\n      },\n    })),\n  };\n};\n\nexport const AnalysisInterface: React.FC = () => {\n  // State\n  const [activeTab, setActiveTab] = useState('prompt');\n  const [prompt, setPrompt] = useState<string>('');\n  const [selectedModels, setSelectedModels] = useState<string[]>(['gpt4o']);\n  const [selectedPattern, setSelectedPattern] = useState<string>('gut');\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [results, setResults] = useState<AnalysisResult[] | null>(null);\n  const [error, setError] = useState<Error | null>(null);\n  const [analysisStatus, setAnalysisStatus] = useState<\n    'idle' | 'preparing' | 'analyzing' | 'complete' | 'error'\n  >('idle');\n\n  // Loading states\n  const [isLoadingModels, setIsLoadingModels] = useState<boolean>(false);\n  const [isLoadingPatterns, setIsLoadingPatterns] = useState<boolean>(false);\n  const [models, setModels] = useState<Model[]>([]);\n  const [patterns, setPatterns] = useState<AnalysisPattern[]>([]);\n  const [analysisStep, setAnalysisStep] = useState<number>(0);\n  const [estimatedTimeRemaining, setEstimatedTimeRemaining] =\n    useState<number>(0);\n\n  // Load data on mount\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setIsLoadingModels(true);\n        setIsLoadingPatterns(true);\n\n        const [modelsData, patternsData] = await Promise.all([\n          fetchModels(),\n          fetchPatterns(),\n        ]);\n\n        setModels(modelsData);\n        setPatterns(patternsData);\n      } catch (err) {\n        setError(\n          err instanceof Error ? err : new Error('Failed to load initial data')\n        );\n      } finally {\n        setIsLoadingModels(false);\n        setIsLoadingPatterns(false);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  // Handle form submission\n  const handleSubmit = async (\n    submittedPrompt: string,\n    options: AnalysisOptions\n  ) => {\n    try {\n      if (selectedModels.length < 2) {\n        throw new Error('Please select at least two models');\n      }\n\n      setPrompt(submittedPrompt);\n      setIsSubmitting(true);\n      setAnalysisStatus('preparing');\n      setAnalysisStep(1);\n      setEstimatedTimeRemaining(10);\n      setError(null);\n\n      // Simulate step progress\n      const progressInterval = setInterval(() => {\n        setAnalysisStep((step) => {\n          if (step < 3) return step + 1;\n          return step;\n        });\n        setEstimatedTimeRemaining((time) => Math.max(0, time - 3));\n      }, 3000);\n\n      setTimeout(() => {\n        setAnalysisStatus('analyzing');\n      }, 2000);\n\n      // Submit analysis\n      const response = await submitAnalysis(\n        submittedPrompt,\n        selectedModels,\n        selectedPattern,\n        options\n      );\n\n      clearInterval(progressInterval);\n\n      // Update state with results\n      setResults(response.results);\n      setAnalysisStatus('complete');\n      setActiveTab('results'); // Switch to results tab\n    } catch (err) {\n      setError(\n        err instanceof Error\n          ? err\n          : new Error('An error occurred during analysis')\n      );\n      setAnalysisStatus('error');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Cancel analysis\n  const handleCancel = () => {\n    setIsSubmitting(false);\n    setAnalysisStatus('idle');\n    setError(new Error('Analysis cancelled by user'));\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-8\">Ultra Analysis Interface</h1>\n\n      {error && (\n        <Alert variant=\"destructive\" className=\"mb-6\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertTitle>Error</AlertTitle>\n          <AlertDescription>{error.message}</AlertDescription>\n        </Alert>\n      )}\n\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n        <TabsList className=\"grid grid-cols-3 mb-8\">\n          <TabsTrigger value=\"prompt\">Prompt</TabsTrigger>\n          <TabsTrigger value=\"models\">Models & Pattern</TabsTrigger>\n          <TabsTrigger value=\"results\" disabled={!results}>\n            Results\n          </TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"prompt\">\n          <Card className=\"p-6\">\n            <h2 className=\"text-xl font-semibold mb-4\">Enter Your Prompt</h2>\n            <p className=\"text-gray-600 mb-6\">\n              Provide your query or task for the AI models to analyze. Be\n              specific and include relevant details for best results.\n            </p>\n\n            <EnhancedPromptInput\n              onSubmit={(newPrompt, options) => {\n                handleSubmit(newPrompt, options);\n                setActiveTab('models');\n              }}\n              isLoading={isSubmitting}\n              maxLength={4000}\n              placeholder=\"Enter your prompt here...\"\n              initialValue={prompt}\n            />\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"models\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            <Card className=\"p-6\">\n              <ModelSelector\n                availableModels={models}\n                selectedModels={selectedModels}\n                onSelectionChange={setSelectedModels}\n                isLoading={isLoadingModels}\n                maxSelections={5}\n              />\n            </Card>\n\n            <Card className=\"p-6\">\n              <EnhancedPatternSelector\n                availablePatterns={patterns}\n                selectedPattern={selectedPattern}\n                onPatternChange={setSelectedPattern}\n                isLoading={isLoadingPatterns}\n              />\n            </Card>\n          </div>\n\n          {(analysisStatus === 'preparing' ||\n            analysisStatus === 'analyzing' ||\n            analysisStatus === 'complete' ||\n            analysisStatus === 'error') && (\n            <div className=\"mt-6\">\n              <AnalysisProgress\n                status={analysisStatus}\n                currentStep={analysisStep}\n                totalSteps={3}\n                estimatedTimeRemaining={estimatedTimeRemaining}\n                error={error || undefined}\n                onCancel={handleCancel}\n              />\n            </div>\n          )}\n        </TabsContent>\n\n        <TabsContent value=\"results\">\n          {results ? (\n            <Card className=\"p-6\">\n              <ResultsDisplay\n                results={results}\n                isLoading={isSubmitting}\n                error={error || undefined}\n                comparisonMode={results.length > 1}\n              />\n            </Card>\n          ) : (\n            <Card className=\"p-6 text-center text-gray-500\">\n              No results to display. Submit a prompt for analysis.\n            </Card>\n          )}\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default AnalysisInterface;\n","import React from 'react';\nimport AnalysisInterface from '../components/AnalysisInterface';\n\nconst UIPrototype: React.FC = () => {\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"mb-6\">\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n            UI Prototype\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-2\">\n            This prototype demonstrates the core functionality of the Ultra\n            analysis system.\n          </p>\n        </div>\n\n        <AnalysisInterface />\n      </div>\n    </div>\n  );\n};\n\nexport default UIPrototype;\n"],"names":["ChevronUp","createLucideIcon","Clipboard","Info","Textarea","forwardRef","className","props","ref","jsx","EnhancedPromptInput","onSubmit","isLoading","maxLength","placeholder","initialValue","prompt","setPrompt","useState","charCount","setCharCount","errorMessage","setErrorMessage","textareaRef","useRef","useEffect","handleKeyDown","e","handleSubmit","handleChange","value","jsxs","AlertCircle","Button","ModelSelector","availableModels","selectedModels","onSelectionChange","error","maxSelections","groupedModels","useMemo","groups","model","expanded","setExpanded","initial","provider","toggleModel","modelId","id","toggleProvider","prev","selectAllInProvider","modelIds","filteredSelected","availableSlots","modelsToAdd","clearProvider","countSelectedInProvider","Label","models","m","ChevronDown","Checkbox","capability","idx","EnhancedPatternSelector","availablePatterns","selectedPattern","onPatternChange","expandedDetail","setExpandedDetail","toggleDetails","patternId","i","pattern","isSelected","isExpanded","Card","useCase","index","option","opt","_a","_b","TABS_NAME","createTabsContext","createTabsScope","createContextScope","createRovingFocusGroupScope","useRovingFocusGroupScope","TabsProvider","useTabsContext","Tabs","React.forwardRef","forwardedRef","__scopeTabs","valueProp","onValueChange","defaultValue","orientation","dir","activationMode","tabsProps","direction","useDirection","setValue","useControllableState","useId","Primitive","TAB_LIST_NAME","TabsList","loop","listProps","context","rovingFocusGroupScope","RovingFocusGroup.Root","TRIGGER_NAME","TabsTrigger","disabled","triggerProps","triggerId","makeTriggerId","contentId","makeContentId","RovingFocusGroup.Item","composeEventHandlers","event","isAutomaticActivation","CONTENT_NAME","TabsContent","forceMount","children","contentProps","isMountAnimationPreventedRef","React.useRef","React.useEffect","rAF","Presence","present","baseId","Root2","List","Trigger","Content","TabsPrimitive.Root","TabsPrimitive.List","cn","TabsPrimitive.Trigger","TabsPrimitive.Content","ResultsDisplay","results","comparisonMode","activeTab","setActiveTab","expandedSections","setExpandedSections","viewMode","setViewMode","toggleSection","sectionId","copyToClipboard","text","downloadAsFile","content","filename","format","element","file","formatModelName","modelName","renderContent","codeBlockRegex","parts","lastIndex","match","language","code","r","Download","result","FileText","section","fetchModels","resolve","fetchPatterns","submitAnalysis","options","AnalysisInterface","setSelectedModels","setSelectedPattern","isSubmitting","setIsSubmitting","setResults","setError","analysisStatus","setAnalysisStatus","isLoadingModels","setIsLoadingModels","isLoadingPatterns","setIsLoadingPatterns","setModels","patterns","setPatterns","analysisStep","setAnalysisStep","estimatedTimeRemaining","setEstimatedTimeRemaining","modelsData","patternsData","err","submittedPrompt","progressInterval","step","time","response","handleCancel","Alert","AlertTitle","AlertDescription","newPrompt","AnalysisProgress","UIPrototype"],"mappings":"maAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,EAAYC,EAAiB,YAAa,CAAC,CAAC,OAAQ,CAAE,EAAG,iBAAkB,IAAK,QAAQ,CAAE,CAAC,CAAC,ECTlG;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMC,EAAYD,EAAiB,YAAa,CAC9C,CAAC,OAAQ,CAAE,MAAO,IAAK,OAAQ,IAAK,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,SAAU,EACrF,CACE,OACA,CACE,EAAG,2EACH,IAAK,QACX,CACA,CACA,CAAC,EClBD;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAME,EAAOF,EAAiB,OAAQ,CACpC,CAAC,SAAU,CAAE,GAAI,KAAM,GAAI,KAAM,EAAG,KAAM,IAAK,SAAU,EACzD,CAAC,OAAQ,CAAE,EAAG,YAAa,IAAK,QAAQ,CAAE,EAC1C,CAAC,OAAQ,CAAE,EAAG,YAAa,IAAK,QAAU,CAAA,CAC5C,CAAC,ECRKG,EAAWC,EAAA,WACf,CAAC,CAAE,UAAAC,EAAY,GAAI,GAAGC,CAAA,EAASC,IAE3BC,EAAA,IAAC,WAAA,CACC,UAAW,6RAA6RH,CAAS,GACjT,IAAAE,EACC,GAAGD,CAAA,CACN,CAGN,EAEAH,EAAS,YAAc,WCAhB,MAAMM,GAAkD,CAAC,CAC9D,SAAAC,EACA,UAAAC,EACA,UAAAC,EAAY,IACZ,YAAAC,EAAc,4BACd,aAAAC,EAAe,EACjB,IAAM,CACJ,KAAM,CAACC,EAAQC,CAAS,EAAIC,EAAAA,SAASH,CAAY,EAC3C,CAACI,EAAWC,CAAY,EAAIF,EAAAA,SAASH,EAAa,MAAM,EACxD,CAACM,EAAcC,CAAe,EAAIJ,WAA6B,EAC/DK,EAAcC,SAA4B,IAAI,EAEpDC,EAAAA,UAAU,IAAM,CAEVF,EAAY,UACFA,EAAA,QAAQ,MAAM,OAAS,OACnCA,EAAY,QAAQ,MAAM,OAAS,GAAGA,EAAY,QAAQ,YAAY,KACxE,EACC,CAACP,CAAM,CAAC,EAGL,MAAAU,EAAiBC,GAA2B,EAC3CA,EAAE,SAAWA,EAAE,UAAYA,EAAE,MAAQ,SAC3BC,EAAA,CAEjB,EAEMC,EAAgBF,GAA8C,CAC5D,MAAAG,EAAQH,EAAE,OAAO,MAGnBG,EAAM,OAASjB,IAInBI,EAAUa,CAAK,EACfV,EAAaU,EAAM,MAAM,EAGrBT,GACFC,EAAgB,MAAS,EAE7B,EAEMM,EAAe,IAAM,CAEzB,GAAIZ,EAAO,OAAO,OAAS,GAAI,CAC7BM,EAAgB,qCAAqC,EACrD,MAAA,CAIFA,EAAgB,MAAS,EAGhBX,EAAAK,EAAQ,EAAE,CACrB,EAGE,OAAAe,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAtB,EAAA,IAACL,EAAA,CACC,IAAKmB,EACL,MAAOP,EACP,SAAUa,EACV,UAAWH,EACX,YAAAZ,EACA,UAAW,yDACTO,EAAe,4CAA8C,EAC/D,GACA,SAAUT,EACV,eAAc,CAAC,CAACS,EAChB,mBAAkBA,EAAe,eAAiB,MAAA,CACpD,EAGAU,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAAAtB,EAAAA,IAAC,OACE,SACCY,GAAAU,EAAA,KAAC,MAAA,CACC,GAAG,eACH,UAAU,iCACV,KAAK,QAEL,SAAA,CAACtB,EAAAA,IAAAuB,EAAA,CAAY,UAAU,cAAe,CAAA,EACtCvB,EAAAA,IAAC,QAAM,SAAaY,CAAA,CAAA,CAAA,CAAA,CAAA,EAG1B,EACAU,EAAA,KAAC,MAAA,CACC,UAAW,cACTZ,EAAYN,EAAY,GAAM,iBAAmB,eACnD,GAEC,SAAA,CAAAM,EAAU,IAAEN,CAAA,CAAA,CAAA,CACf,EACF,EAGAkB,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAAAtB,EAAA,IAACwB,EAAA,CACC,QAASL,EACT,SAAUhB,GAAa,CAACI,EAAO,KAAK,GAAK,CAAC,CAACK,EAC3C,UAAAT,EACA,QAAQ,UAEP,WAAY,eAAiB,QAAA,CAChC,EACCH,EAAA,IAAA,MAAA,CAAI,UAAU,kCAAkC,SAEjD,4BAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EC1GayB,GAA8C,CAAC,CAC1D,gBAAAC,EACA,eAAAC,EACA,kBAAAC,EACA,UAAAzB,EACA,MAAA0B,EACA,cAAAC,EAAgB,CAClB,IAAM,CAEE,MAAAC,EAAgBC,EAAAA,QAAQ,IAAM,CAClC,MAAMC,EAAkC,CAAC,EAEzB,OAAAP,EAAA,QAASQ,GAAU,CAC5BD,EAAOC,EAAM,QAAQ,IACjBD,EAAAC,EAAM,QAAQ,EAAI,CAAC,GAE5BD,EAAOC,EAAM,QAAQ,EAAE,KAAKA,CAAK,CAAA,CAClC,EAEMD,CAAA,EACN,CAACP,CAAe,CAAC,EAGd,CAACS,EAAUC,CAAW,EAAI3B,WAAkC,IAAM,CACtE,MAAM4B,EAAmC,CAAC,EAE1C,cAAO,KAAKN,CAAa,EAAE,QAASO,GAAa,CAC/CD,EAAQC,CAAQ,EAAI,EAAA,CACrB,EACMD,CAAA,CACR,EAGKE,EAAeC,GAAoB,CACnCb,EAAe,SAASa,CAAO,EAEjCZ,EAAkBD,EAAe,OAAQc,GAAOA,IAAOD,CAAO,CAAC,EAG3Db,EAAe,OAASG,GAC1BF,EAAkB,CAAC,GAAGD,EAAgBa,CAAO,CAAC,CAGpD,EAGME,EAAkBJ,GAAqB,CAC3CF,EAAaO,IAAU,CACrB,GAAGA,EACH,CAACL,CAAQ,EAAG,CAACK,EAAKL,CAAQ,CAAA,EAC1B,CACJ,EAGMM,EAAuBN,GAAqB,CAChD,MAAMO,EAAWd,EAAcO,CAAQ,EACpC,OAAQJ,GAAUA,EAAM,WAAW,EACnC,IAAKA,GAAUA,EAAM,EAAE,EAMpBY,EAHkB,CAAC,GAAGnB,CAAc,EAGD,OACtCc,GAAO,CAACI,EAAS,SAASJ,CAAE,CAC/B,EAGMM,EAAiBjB,EAAgBgB,EAAiB,OAClDE,EAAcH,EAAS,MAAM,EAAGE,CAAc,EAEpDnB,EAAkB,CAAC,GAAGkB,EAAkB,GAAGE,CAAW,CAAC,CACzD,EAGMC,EAAiBX,GAAqB,CACpC,MAAAO,EAAWd,EAAcO,CAAQ,EAAE,IAAKJ,GAAUA,EAAM,EAAE,EAC9CN,EAAAD,EAAe,OAAQc,GAAO,CAACI,EAAS,SAASJ,CAAE,CAAC,CAAC,CACzE,EAYMS,EAA2BZ,GAAqB,CAC9C,MAAAO,EAAWd,EAAcO,CAAQ,EAAE,IAAKJ,GAAUA,EAAM,EAAE,EACzD,OAAAP,EAAe,OAAQc,GAAOI,EAAS,SAASJ,CAAE,CAAC,EAAE,MAC9D,EAEA,OAAItC,QAEC,MAAI,CAAA,UAAU,YACb,SAACmB,EAAA,KAAA,MAAA,CAAI,UAAU,gBACb,SAAA,CAACtB,EAAAA,IAAA,MAAA,CAAI,UAAU,oCAAqC,CAAA,QACnD,MAAI,CAAA,UAAU,wCACZ,SAAC,CAAA,EAAG,EAAG,EAAG,CAAC,EAAE,IAAK,GAChBA,EAAAA,IAAA,MAAA,CAAY,UAAU,0BAAb,EAAA,CAAwC,CACnD,CACH,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAIA6B,EAEAP,EAAA,KAAC,MAAI,CAAA,UAAU,8DAA8D,SAAA,CAAA,yBACpDO,EAAM,OAAA,EAC/B,EAKFP,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACtB,EAAA,IAAAmD,GAAA,CAAM,UAAU,wBAAwB,SAAgB,mBAAA,EACzD7B,EAAAA,KAAC,MAAI,CAAA,UAAU,wBACZ,SAAA,CAAeK,EAAA,OAAO,OAAKG,EAAc,WAAA,CAC5C,CAAA,CAAA,EACF,EAEC,OAAO,KAAKC,CAAa,EAAE,SAAW,EACpC/B,EAAAA,IAAA,MAAA,CAAI,UAAU,iEAAiE,SAEhF,sBAAA,CAAA,QAEC,MAAI,CAAA,UAAU,YACZ,SAAA,OAAO,QAAQ+B,CAAa,EAAE,IAAI,CAAC,CAACO,EAAUc,CAAM,IACnD9B,EAAA,KAAC,MAAA,CAEC,UAAU,oDAGV,SAAA,CAAAA,EAAA,KAAC,MAAA,CACC,UAAU,kEACV,QAAS,IAAMoB,EAAeJ,CAAQ,EAEtC,SAAA,CAAChB,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAACtB,EAAA,IAAA,MAAA,CAAI,UAAU,cAAe,SAASsC,EAAA,EACvChB,EAAAA,KAAC,MAAI,CAAA,UAAU,6BAA6B,SAAA,CAAA,IACxC4B,EAAwBZ,CAAQ,EAAE,MAAI,IACvCc,EAAO,OAAQC,GAAMA,EAAE,WAAW,EAAE,OAAO,YAAA,CAC9C,CAAA,CAAA,EACF,EACA/B,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAtB,EAAA,IAAC,SAAA,CACC,QAAUkB,GAAM,CACdA,EAAE,gBAAgB,EAClB0B,EAAoBN,CAAQ,CAC9B,EACA,UAAU,0DACX,SAAA,YAAA,CAED,EACAtC,EAAA,IAAC,SAAA,CACC,QAAUkB,GAAM,CACdA,EAAE,gBAAgB,EAClB+B,EAAcX,CAAQ,CACxB,EACA,UAAU,0DACX,SAAA,OAAA,CAAA,CAED,EACF,EACCH,EAASG,CAAQ,EACftC,MAAAT,EAAA,CAAU,KAAM,EAAI,CAAA,EAErBS,EAAAA,IAACsD,EAAY,CAAA,KAAM,EAAI,CAAA,CAAA,CAE3B,CAAA,CAAA,CAAA,CACF,EAGCnB,EAASG,CAAQ,GACftC,EAAA,IAAA,MAAA,CAAI,UAAU,yBACZ,SAAAoD,EAAO,IAAKlB,GACXZ,EAAA,KAAC,MAAA,CAEC,UAAW;AAAA;AAAA,0BAEPY,EAAM,YAAc,kCAAoC,+BAA+B;AAAA,0BACvFP,EAAe,SAASO,EAAM,EAAE,EAAI,oCAAsC,EAAE;AAAA,wBAEhF,QAAS,IAAMA,EAAM,aAAeK,EAAYL,EAAM,EAAE,EAExD,SAAA,CAAAlC,EAAA,IAACuD,GAAA,CACC,QAAS5B,EAAe,SAASO,EAAM,EAAE,EACzC,gBAAiB,IACfA,EAAM,aAAeK,EAAYL,EAAM,EAAE,EAE3C,SACE,CAACA,EAAM,aACNP,EAAe,QAAUG,GACxB,CAACH,EAAe,SAASO,EAAM,EAAE,EAErC,UAAU,MAAA,CACZ,EACAZ,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAtB,EAAA,IAAC,MAAI,CAAA,UAAU,cAAe,SAAAkC,EAAM,KAAK,EACxCA,EAAM,aACLlC,EAAA,IAAC,OAAI,UAAU,wBACZ,WAAM,WACT,CAAA,CAAA,EAEJ,EAECkC,EAAM,cAAgBA,EAAM,aAAa,OAAS,GACjDZ,EAAA,KAAC,MAAI,CAAA,UAAU,+CACb,SAAA,CAAAtB,EAAA,IAACN,EAAA,CACC,KAAM,GACN,UAAU,2BAAA,CACZ,EACA4B,EAAAA,KAAC,MAAI,CAAA,UAAU,8LACb,SAAA,CAACtB,EAAA,IAAA,MAAA,CAAI,UAAU,qBAAqB,SAEpC,gBAAA,EACCA,EAAA,IAAA,KAAA,CAAG,UAAU,iBACX,WAAM,aAAa,IAAI,CAACwD,EAAYC,IAClCzD,EAAA,IAAA,KAAA,CAAc,SAANwD,CAAA,EAAAC,CAAiB,CAC3B,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,EA7CGvB,EAAM,EAAA,CAgDd,CACH,CAAA,CAAA,CAAA,EAlGGI,CAqGR,CAAA,EACH,EAIDX,EAAe,QAAUG,GACvBR,EAAA,KAAA,MAAA,CAAI,UAAU,4EAA4E,SAAA,CAAA,0CACjDQ,EAAc,IAAA,CACxD,CAAA,CAAA,EAEJ,CAEJ,ECpPa4B,GAA0D,CAAC,CACtE,kBAAAC,EACA,gBAAAC,EACA,gBAAAC,EACA,UAAA1D,EACA,MAAA0B,CACF,IAAM,CACJ,KAAM,CAACiC,EAAgBC,CAAiB,EAAItD,EAAAA,SAAwB,IAAI,EAElEuD,EAAiBC,GAAsB,CAEzCF,EADED,IAAmBG,EACH,KAEAA,CAFI,CAI1B,EAEA,OAAI9D,QAEC,MAAI,CAAA,UAAU,YACb,SAACmB,EAAA,KAAA,MAAA,CAAI,UAAU,gBACb,SAAA,CAACtB,EAAAA,IAAA,MAAA,CAAI,UAAU,oCAAqC,CAAA,QACnD,MAAI,CAAA,UAAU,wCACZ,SAAC,CAAA,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKkE,GAChBlE,EAAAA,IAAA,MAAA,CAAY,UAAU,0BAAb,EAAAkE,CAAwC,CACnD,CACH,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAIArC,EAEAP,EAAA,KAAC,MAAI,CAAA,UAAU,8DAA8D,SAAA,CAAA,oCACzCO,EAAM,OAAA,EAC1C,EAIA8B,EAAkB,SAAW,EAE5B3D,EAAAA,IAAA,MAAA,CAAI,UAAU,iEAAiE,SAEhF,kCAAA,EAKFsB,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACtB,EAAA,IAAA,MAAA,CAAI,UAAU,6BAA6B,SAAuB,0BAAA,EAClEA,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAG1C,8IAAA,QAEC,MAAI,CAAA,UAAU,wCACZ,SAAkB2D,EAAA,IAAKQ,GAAY,CAC5B,MAAAC,EAAaR,IAAoBO,EAAQ,GACzCE,EAAaP,IAAmBK,EAAQ,GAG5C,OAAA7C,EAAA,KAACgD,EAAA,CAEC,UAAW;AAAA;AAAA,kBAEPF,EAAa,uBAAyB,uBAAuB;AAAA,gBAIjE,SAAA,CAAApE,EAAA,IAAC,MAAA,CACC,UAAW;AAAA;AAAA,oBAEPoE,EAAa,6BAA+B,UAAU;AAAA,kBAE1D,QAAS,IAAMP,EAAgBM,EAAQ,EAAE,EAEzC,SAAA7C,EAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAACtB,EAAAA,IAAA,MAAA,CAAI,UAAU,wBACb,SAAAA,EAAA,IAAC,QAAA,CACC,KAAK,QACL,QAASoE,EACT,SAAU,IAAMP,EAAgBM,EAAQ,EAAE,EAC1C,UAAU,4DACV,kBAAiB,WAAWA,EAAQ,EAAE,QAAA,CAAA,EAE1C,EACA7C,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAAtB,EAAA,IAAC,KAAA,CACC,GAAI,WAAWmE,EAAQ,EAAE,SACzB,UAAU,oCAET,SAAQA,EAAA,IAAA,CACX,EACCnE,EAAA,IAAA,IAAA,CAAE,UAAU,6BACV,WAAQ,WACX,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAA,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAUkB,GAAM,CACdA,EAAE,gBAAgB,EAClB8C,EAAcG,EAAQ,EAAE,CAC1B,EACA,UAAU,yCACV,aAAYE,EAAa,eAAiB,eAEzC,SAAAA,QACE9E,EAAU,CAAA,UAAU,SAAU,CAAA,EAE/BS,EAAAA,IAACsD,EAAY,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAErC,CACF,CAAA,CAAA,CACF,EAGCe,GACC/C,EAAA,KAAC,MAAI,CAAA,UAAU,gDACZ,SAAA,CAAA6C,EAAQ,SAAS,OAAS,GACxB7C,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACtB,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAEvD,iBAAA,EACAA,EAAAA,IAAC,MAAG,UAAU,YACX,WAAQ,SAAS,IAAI,CAACuE,EAASC,IAC9BlD,EAAA,KAAC,KAAA,CAEC,UAAU,yCAEV,SAAA,CAACtB,EAAA,IAAA,OAAA,CAAK,UAAU,qBAAqB,SAAC,IAAA,EACrCuE,CAAA,CAAA,EAJIC,CAAA,CAMR,CACH,CAAA,CAAA,EACF,EAGDL,EAAQ,eACPA,EAAQ,cAAc,OAAS,UAC5B,MACC,CAAA,SAAA,CAACnE,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAEvD,yBAAA,EACCA,EAAA,IAAA,MAAA,CAAI,UAAU,YACZ,SAAQmE,EAAA,cAAc,IAAKM,GAC1BnD,SAAAA,OAAAA,EAAAA,KAAC,MAAoB,CAAA,UAAU,oBAC7B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wBACZ,SAAA,CAAOmD,EAAA,KAAK,GAAA,EACf,EACCA,EAAO,OAAS,WACdzE,EAAA,IAAA,QAAA,CAAM,UAAU,gCACf,SAAAA,EAAA,IAAC,QAAA,CACC,KAAK,WACL,UAAU,wBACV,eAAgByE,EAAO,OAAA,CAAA,EAE3B,EAEDA,EAAO,OAAS,UAAYA,EAAO,SAClCzE,EAAA,IAAC,SAAA,CACC,UAAU,0CACV,aAAcyE,EAAO,QAEpB,WAAO,QAAQ,IAAI,CAACC,EAAKR,IACvBlE,EAAA,IAAA,SAAA,CAAe,MAAO0E,EAAI,OAASA,EACjC,SAAAA,EAAI,OAASA,CAAA,EADHR,CAEb,CACD,CAAA,CACH,EAEDO,EAAO,OAAS,SACfzE,EAAA,IAAC,QAAA,CACC,KAAK,QACL,UAAU,OACV,aAAcyE,EAAO,QACrB,MAAKE,EAAAF,EAAO,UAAP,YAAAE,EAAiB,KAAM,EAC5B,MAAKC,EAAAH,EAAO,UAAP,YAAAG,EAAiB,KAAM,GAAA,CAAA,CAC9B,GAhCMH,EAAO,EAkCjB,EACD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CAEN,CAAA,CAAA,CAAA,EA7HGN,EAAQ,EA+Hf,CAEH,CAAA,EACH,EAGA7C,EAAAA,KAAC,MAAI,CAAA,UAAU,+CACb,SAAA,CAACtB,EAAAA,IAAAN,EAAA,CAAK,UAAU,cAAe,CAAA,EAC/BM,EAAAA,IAAC,QAAK,SAGN,gHAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EC3NA,IAAI6E,EAAY,OACZ,CAACC,GAAmBC,EAAe,EAAIC,GAAmBH,EAAW,CACvEI,CACF,CAAC,EACGC,EAA2BD,EAA6B,EACxD,CAACE,GAAcC,CAAc,EAAIN,GAAkBD,CAAS,EAC5DQ,EAAOC,EAAgB,WACzB,CAACxF,EAAOyF,IAAiB,CACvB,KAAM,CACJ,YAAAC,EACA,MAAOC,EACP,cAAAC,EACA,aAAAC,EACA,YAAAC,EAAc,aACd,IAAAC,EACA,eAAAC,EAAiB,YACjB,GAAGC,CACT,EAAQjG,EACEkG,EAAYC,GAAaJ,CAAG,EAC5B,CAACxE,EAAO6E,CAAQ,EAAIC,GAAqB,CAC7C,KAAMV,EACN,SAAUC,EACV,YAAaC,GAAgB,GAC7B,OAAQd,CACd,CAAK,EACD,OAAuB7E,EAAG,IACxBmF,GACA,CACE,MAAOK,EACP,OAAQY,GAAO,EACf,MAAA/E,EACA,cAAe6E,EACf,YAAAN,EACA,IAAKI,EACL,eAAAF,EACA,SAA0B9F,EAAG,IAC3BqG,EAAU,IACV,CACE,IAAKL,EACL,mBAAoBJ,EACpB,GAAGG,EACH,IAAKR,CACjB,CACA,CACA,CACK,CACL,CACA,EACAF,EAAK,YAAcR,EACnB,IAAIyB,EAAgB,WAChBC,EAAWjB,EAAgB,WAC7B,CAACxF,EAAOyF,IAAiB,CACvB,KAAM,CAAE,YAAAC,EAAa,KAAAgB,EAAO,GAAM,GAAGC,CAAW,EAAG3G,EAC7C4G,EAAUtB,EAAekB,EAAed,CAAW,EACnDmB,EAAwBzB,EAAyBM,CAAW,EAClE,OAAuBxF,EAAG,IACxB4G,GACA,CACE,QAAS,GACT,GAAGD,EACH,YAAaD,EAAQ,YACrB,IAAKA,EAAQ,IACb,KAAAF,EACA,SAA0BxG,EAAG,IAC3BqG,EAAU,IACV,CACE,KAAM,UACN,mBAAoBK,EAAQ,YAC5B,GAAGD,EACH,IAAKlB,CACjB,CACA,CACA,CACK,CACL,CACA,EACAgB,EAAS,YAAcD,EACvB,IAAIO,EAAe,cACfC,EAAcxB,EAAgB,WAChC,CAACxF,EAAOyF,IAAiB,CACvB,KAAM,CAAE,YAAAC,EAAa,MAAAnE,EAAO,SAAA0F,EAAW,GAAO,GAAGC,CAAY,EAAKlH,EAC5D4G,EAAUtB,EAAeyB,EAAcrB,CAAW,EAClDmB,EAAwBzB,EAAyBM,CAAW,EAC5DyB,EAAYC,GAAcR,EAAQ,OAAQrF,CAAK,EAC/C8F,EAAYC,GAAcV,EAAQ,OAAQrF,CAAK,EAC/C+C,EAAa/C,IAAUqF,EAAQ,MACrC,OAAuB1G,EAAG,IACxBqH,GACA,CACE,QAAS,GACT,GAAGV,EACH,UAAW,CAACI,EACZ,OAAQ3C,EACR,SAA0BpE,EAAG,IAC3BqG,EAAU,OACV,CACE,KAAM,SACN,KAAM,MACN,gBAAiBjC,EACjB,gBAAiB+C,EACjB,aAAc/C,EAAa,SAAW,WACtC,gBAAiB2C,EAAW,GAAK,OACjC,SAAAA,EACA,GAAIE,EACJ,GAAGD,EACH,IAAKzB,EACL,YAAa+B,EAAqBxH,EAAM,YAAcyH,GAAU,CAC1D,CAACR,GAAYQ,EAAM,SAAW,GAAKA,EAAM,UAAY,GACvDb,EAAQ,cAAcrF,CAAK,EAE3BkG,EAAM,eAAgB,CAEtC,CAAa,EACD,UAAWD,EAAqBxH,EAAM,UAAYyH,GAAU,CACtD,CAAC,IAAK,OAAO,EAAE,SAASA,EAAM,GAAG,GAAGb,EAAQ,cAAcrF,CAAK,CACjF,CAAa,EACD,QAASiG,EAAqBxH,EAAM,QAAS,IAAM,CACjD,MAAM0H,EAAwBd,EAAQ,iBAAmB,SACrD,CAACtC,GAAc,CAAC2C,GAAYS,GAC9Bd,EAAQ,cAAcrF,CAAK,CAE9B,CAAA,CACb,CACA,CACA,CACK,CACL,CACA,EACAyF,EAAY,YAAcD,EAC1B,IAAIY,GAAe,cACfC,GAAcpC,EAAgB,WAChC,CAACxF,EAAOyF,IAAiB,CACvB,KAAM,CAAE,YAAAC,EAAa,MAAAnE,EAAO,WAAAsG,EAAY,SAAAC,EAAU,GAAGC,CAAY,EAAK/H,EAChE4G,EAAUtB,EAAeqC,GAAcjC,CAAW,EAClDyB,EAAYC,GAAcR,EAAQ,OAAQrF,CAAK,EAC/C8F,EAAYC,GAAcV,EAAQ,OAAQrF,CAAK,EAC/C+C,EAAa/C,IAAUqF,EAAQ,MAC/BoB,EAA+BC,EAAY,OAAC3D,CAAU,EAC5D4D,OAAAA,EAAAA,UAAgB,IAAM,CACpB,MAAMC,EAAM,sBAAsB,IAAMH,EAA6B,QAAU,EAAK,EACpF,MAAO,IAAM,qBAAqBG,CAAG,CACtC,EAAE,EAAE,EACkBjI,EAAG,IAACkI,GAAU,CAAE,QAASP,GAAcvD,EAAY,SAAU,CAAC,CAAE,QAAA+D,CAAO,IAAuBnI,EAAG,IACtHqG,EAAU,IACV,CACE,aAAcjC,EAAa,SAAW,WACtC,mBAAoBsC,EAAQ,YAC5B,KAAM,WACN,kBAAmBO,EACnB,OAAQ,CAACkB,EACT,GAAIhB,EACJ,SAAU,EACV,GAAGU,EACH,IAAKtC,EACL,MAAO,CACL,GAAGzF,EAAM,MACT,kBAAmBgI,EAA6B,QAAU,KAAO,MAClE,EACD,SAAUK,GAAWP,CAC7B,CACA,EAAO,CACP,CACA,EACAF,GAAY,YAAcD,GAC1B,SAASP,GAAckB,EAAQ/G,EAAO,CACpC,MAAO,GAAG+G,CAAM,YAAY/G,CAAK,EACnC,CACA,SAAS+F,GAAcgB,EAAQ/G,EAAO,CACpC,MAAO,GAAG+G,CAAM,YAAY/G,CAAK,EACnC,CACA,IAAIgH,GAAQhD,EACRiD,GAAO/B,EACPgC,GAAUzB,EACV0B,GAAUd,GCtLd,MAAMrC,GAAOoD,GAEPlC,EAAWjB,EAGf,WAAA,CAAC,CAAE,UAAAzF,EAAW,GAAGC,CAAM,EAAGC,IAC1BC,EAAA,IAAC0I,GAAA,CACC,IAAA3I,EACA,UAAW4I,EACT,wFACA9I,CACF,EACC,GAAGC,CAAA,CACN,CACD,EACDyG,EAAS,YAAcmC,GAAmB,YAE1C,MAAM5B,EAAcxB,EAGlB,WAAA,CAAC,CAAE,UAAAzF,EAAW,GAAGC,CAAM,EAAGC,IAC1BC,EAAA,IAAC4I,GAAA,CACC,IAAA7I,EACA,UAAW4I,EACT,sYACA9I,CACF,EACC,GAAGC,CAAA,CACN,CACD,EACDgH,EAAY,YAAc8B,GAAsB,YAEhD,MAAMlB,EAAcpC,EAGlB,WAAA,CAAC,CAAE,UAAAzF,EAAW,GAAGC,CAAM,EAAGC,IAC1BC,EAAA,IAAC6I,GAAA,CACC,IAAA9I,EACA,UAAW4I,EACT,kIACA9I,CACF,EACC,GAAGC,CAAA,CACN,CACD,EACD4H,EAAY,YAAcmB,GAAsB,YCfzC,MAAMC,GAAgD,CAAC,CAC5D,QAAAC,EACA,UAAA5I,EACA,MAAA0B,EACA,eAAAmH,EAAiB,EACnB,IAAM,CACE,KAAA,CAACC,EAAWC,CAAY,EAAIzI,EAAA,SAChCsI,EAAQ,OAAS,EAAIA,EAAQ,CAAC,EAAE,QAAU,YAC5C,EACM,CAACI,EAAkBC,CAAmB,EAAI3I,EAAAA,SAAmB,CAAA,CAAE,EAC/D,CAAC4I,EAAUC,CAAW,EAAI7I,EAAA,SAC9B,UACF,EAEM8I,EAAiBC,GAAsB,CACvCL,EAAiB,SAASK,CAAS,EACrCJ,EAAoBD,EAAiB,OAAQ1G,GAAOA,IAAO+G,CAAS,CAAC,EAErEJ,EAAoB,CAAC,GAAGD,EAAkBK,CAAS,CAAC,CAExD,EAEMC,EAAmBC,GAAiB,CAC9B,UAAA,UAAU,UAAUA,CAAI,CAEpC,EAEMC,EAAiB,CACrBC,EACAC,EACAC,EAAuB,QACpB,CACG,MAAAC,EAAU,SAAS,cAAc,GAAG,EACpCC,EAAO,IAAI,KAAK,CAACJ,CAAO,EAAG,CAAE,KAAM,aAAc,EAC/CG,EAAA,KAAO,IAAI,gBAAgBC,CAAI,EACvCD,EAAQ,SAAW,GAAGF,CAAQ,IAAIC,CAAM,GAC/B,SAAA,KAAK,YAAYC,CAAO,EACjCA,EAAQ,MAAM,EACL,SAAA,KAAK,YAAYA,CAAO,CACnC,EAEME,EAAkB,CAACzH,EAAiB0H,IACpCA,GAGqC,CACvC,MAAO,SACP,KAAM,QACN,gBAAiB,gBACjB,kBAAmB,kBACnB,aAAc,aACd,OAAQ,SACV,EAEgB1H,CAAO,GAAKA,EAGxB2H,EAAiBP,GAAoB,CAEzC,MAAMQ,EAAiB,2BACjBC,EAAQ,CAAC,EACf,IAAIC,EAAY,EACZC,EAEJ,MAAQA,EAAQH,EAAe,KAAKR,CAAO,KAAO,MAAM,CAElDW,EAAM,MAAQD,GACVD,EAAA,KACHrK,EAAA,IAAA,IAAA,CAA4B,UAAU,2BACpC,SAAQ4J,EAAA,MAAMU,EAAWC,EAAM,KAAK,CAAA,EAD/B,QAAQD,CAAS,EAEzB,CACF,EAII,MAAAE,EAAWD,EAAM,CAAC,GAAK,YACvBE,EAAOF,EAAM,CAAC,EACdF,EAAA,KACJ/I,EAAAA,KAAC,MAAgC,CAAA,UAAU,gBACzC,SAAA,CAACtB,EAAAA,IAAA,MAAA,CAAI,UAAU,wCACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMyJ,EAAgBgB,CAAI,EACnC,UAAU,0DACV,aAAW,YAEX,SAAAzK,EAAAA,IAACP,EAAU,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,EAEzB,EACA6B,EAAAA,KAAC,MAAI,CAAA,UAAU,2DACb,SAAA,CAACtB,EAAA,IAAA,MAAA,CAAI,UAAU,6BAA8B,SAASwK,EAAA,QACrD,MAAI,CAAA,UAAU,oBACb,SAACxK,EAAA,IAAA,OAAA,CAAM,UAAK,CAAA,CACd,CAAA,CAAA,CACF,CAAA,CAfQ,CAAA,EAAA,QAAQuK,EAAM,KAAK,EAgB7B,CACF,EAEAD,EAAYC,EAAM,MAAQA,EAAM,CAAC,EAAE,MAAA,CAIjC,OAAAD,EAAYV,EAAQ,QAChBS,EAAA,KACJrK,EAAAA,IAAC,IAA4B,CAAA,UAAU,sBACpC,SAAA4J,EAAQ,MAAMU,CAAS,CAAA,EADlB,QAAQA,CAAS,EAEzB,CACF,EAGMtK,EAAAA,IAAA,MAAA,CAAI,UAAU,gBAAiB,SAAMqK,EAAA,CAC/C,EAEA,OAAIlK,EAEAmB,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACtB,EAAAA,IAAA,MAAA,CAAI,UAAU,oCAAqC,CAAA,EACpDA,EAAAA,IAAC,MAAI,CAAA,UAAU,0BAA2B,CAAA,CAAA,EAC5C,EAIA6B,EAEAP,EAAA,KAAC,MAAI,CAAA,UAAU,8DAA8D,SAAA,CAAA,6BAChDO,EAAM,OAAA,EACnC,EAIAkH,EAAQ,SAAW,EAEnB/I,EAAA,IAAC,OAAI,UAAU,+DACb,eAAC,MAAI,CAAA,UAAU,gBAAgB,SAAA,uBAAA,CAAqB,CACtD,CAAA,EAKFsB,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACtB,EAAA,IAAA,KAAA,CAAG,UAAU,wBAAwB,SAAgB,mBAAA,EACtDsB,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,MAAO+H,EACP,SAAWnI,GAAMoI,EAAYpI,EAAE,OAAO,KAAY,EAClD,UAAU,sDAEV,SAAA,CAAClB,EAAA,IAAA,SAAA,CAAO,MAAM,WAAW,SAAa,gBAAA,EACrCA,EAAA,IAAA,SAAA,CAAO,MAAM,UAAU,SAAY,eAAA,EACnCA,EAAA,IAAA,SAAA,CAAO,MAAM,WAAW,SAAa,eAAA,CAAA,CAAA,CAAA,CACxC,EACAsB,EAAA,KAACE,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS,IACPmI,EACEZ,EACG,IACE2B,GACC,KAAKT,EAAgBS,EAAE,QAASA,EAAE,SAAS,CAAC;AAAA;AAAA,EAAOA,EAAE,OAAO,EAAA,EAE/D,KAAK;AAAA;AAAA;AAAA;AAAA,CAAa,EACrB,yBACA,IACF,EAGF,SAAA,CAAA1K,EAAA,IAAC2K,GAAS,CAAA,KAAM,GAAI,UAAU,OAAO,EAAE,QAAA,CAAA,CAAA,CAEzC,CACF,CAAA,CAAA,EACF,EAEArJ,EAAA,KAAC+D,GAAA,CACC,aAAc4D,EACd,cAAeC,EACf,UAAU,SAEV,SAAA,CAAC5H,EAAAA,KAAAiF,EAAA,CAAS,UAAU,mCACjB,SAAA,CAAQwC,EAAA,IAAK6B,GACZ5K,EAAA,IAAC8G,EAAA,CAEC,MAAO8D,EAAO,QACd,UAAU,mBAET,SAAgBX,EAAAW,EAAO,QAASA,EAAO,SAAS,CAAA,EAJ5CA,EAAO,OAAA,CAMf,EACA7B,EAAQ,OAAS,GAChB/I,EAAAA,IAAC8G,GAAY,MAAM,aAAa,UAAU,mBAAmB,SAE7D,cAAA,CAAA,CAAA,EAEJ,EAGCiC,EAAQ,IAAK6B,GACZ5K,EAAA,IAAC0H,EAAA,CAEC,MAAOkD,EAAO,QACd,UAAU,OAEV,SAAAtJ,EAAA,KAACgD,EAAK,CAAA,UAAU,MACd,SAAA,CAAChD,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACtB,EAAAA,IAAA,KAAA,CAAG,UAAU,sBACX,SAAAiK,EAAgBW,EAAO,QAASA,EAAO,SAAS,CACnD,CAAA,EACAtJ,EAAAA,KAAC,MAAI,CAAA,UAAU,wBACZ,SAAA,CAAA,IAAI,KAAKsJ,EAAO,SAAS,EAAE,eAAe,EAAE,MAC3CA,EAAO,iBAAmB,KAAM,QAAQ,CAAC,EAAE,mBAAA,CAE/C,CAAA,CAAA,EACF,EACAtJ,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAA,EAAA,KAACE,EAAA,CACC,QAAQ,QACR,KAAK,KACL,QAAS,IAAMiI,EAAgBmB,EAAO,OAAO,EAE7C,SAAA,CAAA5K,EAAA,IAACP,EAAU,CAAA,KAAM,GAAI,UAAU,OAAO,EAAE,MAAA,CAAA,CAE1C,EACA6B,EAAA,KAACE,EAAA,CACC,QAAQ,QACR,KAAK,KACL,QAAS,IACPmI,EACEiB,EAAO,QACP,GAAGA,EAAO,OAAO,YACjB,KACF,EAGF,SAAA,CAAA5K,EAAA,IAAC6K,GAAS,CAAA,KAAM,GAAI,UAAU,OAAO,EAAE,MAAA,CAAA,CAAA,CAEzC,CACF,CAAA,CAAA,EACF,EAGCD,EAAO,UAAYA,EAAO,SAAS,OAAS,EAC3C5K,MAAC,MAAI,CAAA,UAAU,YACZ,SAAA4K,EAAO,SAAS,IAAKE,GAAY,CAChC,MAAMzG,EAAa8E,EAAiB,SAAS2B,EAAQ,EAAE,EAGrD,OAAAxJ,EAAA,KAAC,MAAA,CAEC,UAAU,oCAEV,SAAA,CAAAA,EAAA,KAAC,MAAA,CACC,UAAU,yEACV,QAAS,IAAMiI,EAAcuB,EAAQ,EAAE,EAEvC,SAAA,CAAA9K,EAAA,IAAC,KAAG,CAAA,UAAU,cAAe,SAAA8K,EAAQ,MAAM,EAC1CzG,QACE9E,EAAU,CAAA,KAAM,GAAI,EAErBS,MAACsD,EAAY,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CAE3B,EACCe,SACE,MAAI,CAAA,UAAU,MACZ,SAAc8F,EAAAW,EAAQ,OAAO,CAChC,CAAA,CAAA,CAAA,EAjBGA,EAAQ,EAmBf,CAEH,CAAA,EACH,EAEC9K,MAAA,MAAA,CAAI,UAAU,mBACZ,SAAAmK,EAAcS,EAAO,OAAO,CAC/B,CAAA,EAIDvB,IAAa,YAAcuB,EAAO,UAChCtJ,EAAAA,KAAA,MAAA,CAAI,UAAU,qBACb,SAAA,CAACtB,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAEvD,WAAA,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,+CACZ,SAAA,KAAK,UAAU4K,EAAO,SAAU,KAAM,CAAC,CAC1C,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EA1FKA,EAAO,OAAA,CA4Ff,EAGA7B,EAAQ,OAAS,GAChB/I,EAAAA,IAAC0H,GAAY,MAAM,aAAa,UAAU,OACxC,SAAA1H,EAAA,IAAC,MAAA,CACC,UAAW,QAAQqJ,IAAa,UAAY,cAAgB,4BAA4B,SAEvF,SAAAN,EAAQ,IAAK6B,GACZtJ,EAAA,KAACgD,EAAA,CAEC,UAAU,6BAEV,SAAA,CAAChD,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACtB,EAAAA,IAAA,KAAA,CAAG,UAAU,sBACX,SAAAiK,EAAgBW,EAAO,QAASA,EAAO,SAAS,CACnD,CAAA,EACA5K,EAAA,IAACwB,EAAA,CACC,QAAQ,QACR,KAAK,KACL,QAAS,IAAMiI,EAAgBmB,EAAO,OAAO,EAE7C,SAAA5K,EAAAA,IAACP,EAAU,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CACvB,EACF,EACAO,EAAA,IAAC,MAAA,CACC,UAAW,oBAAoBqJ,IAAa,UAAY,2BAA6B,EAAE,GAEtF,SAAAc,EAAcS,EAAO,OAAO,CAAA,CAAA,CAC/B,CAAA,EAnBKA,EAAO,OAqBf,CAAA,CAAA,CAAA,CAEL,CAAA,CAAA,CAAA,CAAA,CAEJ,EACF,CAEJ,ECzVMG,GAAc,UAElB,MAAM,IAAI,QAASC,GAAY,WAAWA,EAAS,GAAI,CAAC,EAEjD,CACL,CACE,GAAI,QACJ,KAAM,SACN,SAAU,SACV,YAAa,0CACb,aAAc,CAAC,kBAAmB,YAAa,kBAAkB,EACjE,YAAa,EACf,EACA,CACE,GAAI,OACJ,KAAM,QACN,SAAU,SACV,YAAa,gDACb,aAAc,CAAC,kBAAmB,WAAW,EAC7C,YAAa,EACf,EACA,CACE,GAAI,cACJ,KAAM,gBACN,SAAU,YACV,YAAa,kCACb,aAAc,CAAC,kBAAmB,YAAa,cAAc,EAC7D,YAAa,EACf,EACA,CACE,GAAI,gBACJ,KAAM,kBACN,SAAU,YACV,YAAa,oCACb,aAAc,CAAC,kBAAmB,WAAW,EAC7C,YAAa,EACf,EACA,CACE,GAAI,aACJ,KAAM,aACN,SAAU,SACV,YAAa,kCACb,aAAc,CAAC,kBAAmB,iBAAiB,EACnD,YAAa,EACf,EACA,CACE,GAAI,SACJ,KAAM,UACN,SAAU,OACV,YAAa,8CACb,aAAc,CAAC,iBAAiB,EAChC,YAAa,EAAA,CAEjB,GAGIC,GAAgB,UAEpB,MAAM,IAAI,QAASD,GAAY,WAAWA,EAAS,GAAG,CAAC,EAEhD,CACL,CACE,GAAI,MACJ,KAAM,qBACN,YACE,wFACF,SAAU,CACR,qBACA,mCACA,yBAAA,CAEJ,EACA,CACE,GAAI,aACJ,KAAM,sBACN,YACE,wEACF,SAAU,CACR,oBACA,kBACA,mCAAA,CAEJ,EACA,CACE,GAAI,WACJ,KAAM,oBACN,YACE,gEACF,SAAU,CACR,0BACA,2BACA,qBAAA,CAEJ,EACA,CACE,GAAI,aACJ,KAAM,sBACN,YAAa,yDACb,SAAU,CACR,kBACA,gCACA,qBAAA,CAEJ,EACA,CACE,GAAI,cACJ,KAAM,uBACN,YAAa,4DACb,SAAU,CAAC,mBAAoB,sBAAuB,iBAAiB,CAAA,CAE3E,GAGIE,GAAiB,MACrB3K,EACAoB,EACAiC,EACAuH,KAMA,MAAM,IAAI,QAASH,GAAY,WAAWA,EAAS,GAAI,CAAC,EAEjD,CACL,OAAQ,WACR,QAASrJ,EAAe,IAAKa,IAAa,CACxC,QAAAA,EACA,UACEA,IAAY,QACR,SACAA,IAAY,cACV,gBACAA,IAAY,aACV,aACAA,EACV,QAAS,8CAA8CA,CAAO,cAAcoB,CAAe;AAAA;AAAA,mBAAiCrD,CAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAClI,UAAW,IAAI,KAAK,EAAE,YAAY,EAClC,iBAAkB,KAAK,MAAM,KAAK,OAAO,EAAI,GAAI,EAAI,IACrD,SAAU,CACR,CACE,GAAI,WACJ,MAAO,WACP,QAAS,sDAAsDA,CAAM,GACvE,EACA,CACE,GAAI,aACJ,MAAO,aACP,QACE;AAAA;AAAA,oBACJ,EACA,CACE,GAAI,aACJ,MAAO,aACP,QAAS,+CAAA,CAEb,EACA,SAAU,CACR,aAAc,MACd,WAAY,KAAK,MAAM,KAAK,OAAO,EAAI,GAAI,EAAI,IAC/C,QAASqD,EACT,QAAAuH,CAAA,CACF,EACA,CACJ,GAGWC,GAA8B,IAAM,CAE/C,KAAM,CAACnC,EAAWC,CAAY,EAAIzI,EAAAA,SAAS,QAAQ,EAC7C,CAACF,EAAQC,CAAS,EAAIC,EAAAA,SAAiB,EAAE,EACzC,CAACkB,EAAgB0J,CAAiB,EAAI5K,EAAAA,SAAmB,CAAC,OAAO,CAAC,EAClE,CAACmD,EAAiB0H,CAAkB,EAAI7K,EAAAA,SAAiB,KAAK,EAC9D,CAAC8K,EAAcC,CAAe,EAAI/K,EAAAA,SAAkB,EAAK,EACzD,CAACsI,EAAS0C,CAAU,EAAIhL,EAAAA,SAAkC,IAAI,EAC9D,CAACoB,EAAO6J,CAAQ,EAAIjL,EAAAA,SAAuB,IAAI,EAC/C,CAACkL,EAAgBC,CAAiB,EAAInL,EAAAA,SAE1C,MAAM,EAGF,CAACoL,EAAiBC,CAAkB,EAAIrL,EAAAA,SAAkB,EAAK,EAC/D,CAACsL,EAAmBC,CAAoB,EAAIvL,EAAAA,SAAkB,EAAK,EACnE,CAAC2C,EAAQ6I,CAAS,EAAIxL,EAAAA,SAAkB,CAAA,CAAE,EAC1C,CAACyL,GAAUC,EAAW,EAAI1L,EAAAA,SAA4B,CAAA,CAAE,EACxD,CAAC2L,GAAcC,CAAe,EAAI5L,EAAAA,SAAiB,CAAC,EACpD,CAAC6L,GAAwBC,CAAyB,EACtD9L,EAAAA,SAAiB,CAAC,EAGpBO,EAAAA,UAAU,IAAM,EACG,SAAY,CACvB,GAAA,CACF8K,EAAmB,EAAI,EACvBE,EAAqB,EAAI,EAEzB,KAAM,CAACQ,EAAYC,CAAY,EAAI,MAAM,QAAQ,IAAI,CACnD1B,GAAY,EACZE,GAAc,CAAA,CACf,EAEDgB,EAAUO,CAAU,EACpBL,GAAYM,CAAY,QACjBC,EAAK,CACZhB,EACEgB,aAAe,MAAQA,EAAM,IAAI,MAAM,6BAA6B,CACtE,CAAA,QACA,CACAZ,EAAmB,EAAK,EACxBE,EAAqB,EAAK,CAAA,CAE9B,GAES,CACX,EAAG,EAAE,EAGC,MAAA7K,GAAe,MACnBwL,EACAxB,IACG,CACC,GAAA,CACE,GAAAxJ,EAAe,OAAS,EACpB,MAAA,IAAI,MAAM,mCAAmC,EAGrDnB,EAAUmM,CAAe,EACzBnB,EAAgB,EAAI,EACpBI,EAAkB,WAAW,EAC7BS,EAAgB,CAAC,EACjBE,EAA0B,EAAE,EAC5Bb,EAAS,IAAI,EAGP,MAAAkB,EAAmB,YAAY,IAAM,CACzCP,EAAiBQ,GACXA,EAAO,EAAUA,EAAO,EACrBA,CACR,EACDN,EAA2BO,GAAS,KAAK,IAAI,EAAGA,EAAO,CAAC,CAAC,GACxD,GAAI,EAEP,WAAW,IAAM,CACflB,EAAkB,WAAW,GAC5B,GAAI,EAGP,MAAMmB,GAAW,MAAM7B,GACrByB,EACAhL,EACAiC,EACAuH,CACF,EAEA,cAAcyB,CAAgB,EAG9BnB,EAAWsB,GAAS,OAAO,EAC3BnB,EAAkB,UAAU,EAC5B1C,EAAa,SAAS,QACfwD,EAAK,CACZhB,EACEgB,aAAe,MACXA,EACA,IAAI,MAAM,mCAAmC,CACnD,EACAd,EAAkB,OAAO,CAAA,QACzB,CACAJ,EAAgB,EAAK,CAAA,CAEzB,EAGMwB,GAAe,IAAM,CACzBxB,EAAgB,EAAK,EACrBI,EAAkB,MAAM,EACfF,EAAA,IAAI,MAAM,4BAA4B,CAAC,CAClD,EAGE,OAAApK,EAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACtB,EAAA,IAAA,KAAA,CAAG,UAAU,0BAA0B,SAAwB,2BAAA,EAE/D6B,GACEP,EAAAA,KAAA2L,GAAA,CAAM,QAAQ,cAAc,UAAU,OACrC,SAAA,CAACjN,EAAAA,IAAAuB,EAAA,CAAY,UAAU,SAAU,CAAA,EACjCvB,EAAAA,IAACkN,IAAW,SAAK,OAAA,CAAA,EACjBlN,EAAAA,IAACmN,GAAkB,CAAA,SAAAtL,EAAM,OAAQ,CAAA,CAAA,EACnC,SAGDwD,GAAK,CAAA,MAAO4D,EAAW,cAAeC,EAAc,UAAU,SAC7D,SAAA,CAAC5H,EAAAA,KAAAiF,EAAA,CAAS,UAAU,wBAClB,SAAA,CAACvG,EAAA,IAAA8G,EAAA,CAAY,MAAM,SAAS,SAAM,SAAA,EACjC9G,EAAA,IAAA8G,EAAA,CAAY,MAAM,SAAS,SAAgB,mBAAA,QAC3CA,EAAY,CAAA,MAAM,UAAU,SAAU,CAACiC,EAAS,SAEjD,SAAA,CAAA,CAAA,EACF,QAECrB,EAAY,CAAA,MAAM,SACjB,SAACpG,EAAA,KAAAgD,EAAA,CAAK,UAAU,MACd,SAAA,CAACtE,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA6B,SAAiB,oBAAA,EAC3DA,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAqB,SAGlC,sHAAA,EAEAA,EAAA,IAACC,GAAA,CACC,SAAU,CAACmN,EAAWjC,IAAY,CAChChK,GAAaiM,EAAWjC,CAAO,EAC/BjC,EAAa,QAAQ,CACvB,EACA,UAAWqC,EACX,UAAW,IACX,YAAY,4BACZ,aAAchL,CAAA,CAAA,CAChB,CAAA,CACF,CACF,CAAA,EAEAe,EAAAA,KAACoG,EAAY,CAAA,MAAM,SACjB,SAAA,CAACpG,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAACtB,EAAAA,IAAAsE,EAAA,CAAK,UAAU,MACd,SAAAtE,EAAA,IAACyB,GAAA,CACC,gBAAiB2B,EACjB,eAAAzB,EACA,kBAAmB0J,EACnB,UAAWQ,EACX,cAAe,CAAA,CAAA,EAEnB,EAEA7L,EAAAA,IAACsE,EAAK,CAAA,UAAU,MACd,SAAAtE,EAAA,IAAC0D,GAAA,CACC,kBAAmBwI,GACnB,gBAAAtI,EACA,gBAAiB0H,EACjB,UAAWS,CAAA,CAAA,CAEf,CAAA,CAAA,EACF,GAEEJ,IAAmB,aACnBA,IAAmB,aACnBA,IAAmB,YACnBA,IAAmB,UACnB3L,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACqN,GAAA,CACC,OAAQ1B,EACR,YAAaS,GACb,WAAY,EACZ,uBAAAE,GACA,MAAOzK,GAAS,OAChB,SAAUmL,EAAA,CAAA,CAEd,CAAA,CAAA,EAEJ,EAEAhN,EAAAA,IAAC0H,GAAY,MAAM,UAChB,WACE1H,EAAA,IAAAsE,EAAA,CAAK,UAAU,MACd,SAAAtE,EAAA,IAAC8I,GAAA,CACC,QAAAC,EACA,UAAWwC,EACX,MAAO1J,GAAS,OAChB,eAAgBkH,EAAQ,OAAS,CAAA,CAAA,EAErC,EAEA/I,EAAA,IAACsE,GAAK,UAAU,gCAAgC,gEAEhD,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EC3YMgJ,GAAwB,UAEzB,MAAI,CAAA,UAAU,2CACb,SAAChM,EAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACtB,EAAA,IAAA,KAAA,CAAG,UAAU,mDAAmD,SAEjE,eAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,wCAAwC,SAGrD,kFAAA,CAAA,CAAA,EACF,QAECoL,GAAkB,CAAA,CAAA,CAAA,CAAA,CACrB,CACF,CAAA","x_google_ignoreList":[0,1,2,7]}