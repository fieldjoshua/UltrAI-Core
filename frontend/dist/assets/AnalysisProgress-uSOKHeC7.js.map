{"version":3,"file":"AnalysisProgress-uSOKHeC7.js","sources":["../../node_modules/lucide-react/dist/esm/icons/clock.js","../../src/components/ui/progress.tsx","../../src/components/atoms/AnalysisProgress.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.364.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Clock = createLucideIcon(\"Clock\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"polyline\", { points: \"12 6 12 12 16 14\", key: \"68esgv\" }]\n]);\n\nexport { Clock as default };\n//# sourceMappingURL=clock.js.map\n","import React, { HTMLAttributes, forwardRef } from 'react';\n\ninterface ProgressProps extends HTMLAttributes<HTMLDivElement> {\n  value?: number;\n  max?: number;\n}\n\nexport const Progress = forwardRef<HTMLDivElement, ProgressProps>(\n  ({ className = '', value = 0, max = 100, ...props }, ref) => {\n    const valueString = value.toString();\n    const maxString = max.toString();\n\n    return (\n      <div\n        ref={ref}\n        role=\"progressbar\"\n        aria-valuemin=\"0\"\n        aria-valuemax={maxString}\n        aria-valuenow={valueString}\n        className={`relative h-2 w-full overflow-hidden rounded-full bg-gray-100 ${className}`}\n        {...props}\n      >\n        <div\n          className=\"h-full w-full flex-1 bg-blue-600 transition-all\"\n          style={{ transform: `translateX(-${100 - (value / max) * 100}%)` }}\n        />\n      </div>\n    );\n  }\n);\n\nProgress.displayName = 'Progress';\n","import React, { useState, useEffect } from 'react';\nimport { Progress } from '../ui/progress';\nimport { AlertCircle, CheckCircle, Clock, X } from 'lucide-react';\nimport { Button } from '../ui/button';\n\nexport interface AnalysisProgressProps {\n  status: 'idle' | 'preparing' | 'analyzing' | 'complete' | 'error';\n  currentStep?: number;\n  totalSteps?: number;\n  estimatedTimeRemaining?: number;\n  statusMessage?: string;\n  error?: Error;\n  onCancel?: () => void;\n}\n\nexport const AnalysisProgress: React.FC<AnalysisProgressProps> = ({\n  status,\n  currentStep = 0,\n  totalSteps = 1,\n  estimatedTimeRemaining,\n  statusMessage,\n  error,\n  onCancel,\n}) => {\n  const [progress, setProgress] = useState(0);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [startTime] = useState(Date.now());\n\n  // Calculate progress percentage\n  useEffect(() => {\n    if (status === 'idle') {\n      setProgress(0);\n    } else if (status === 'complete') {\n      setProgress(100);\n    } else if (status === 'error') {\n      // Keep the progress where it was when the error occurred\n    } else {\n      // Calculate progress based on steps\n      const stepProgress =\n        totalSteps > 0 ? (currentStep / totalSteps) * 100 : 0;\n      setProgress(Math.min(Math.max(stepProgress, 0), 99)); // Cap between 0-99% until complete\n    }\n  }, [status, currentStep, totalSteps]);\n\n  // Track elapsed time\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n\n    if (status === 'preparing' || status === 'analyzing') {\n      interval = setInterval(() => {\n        setElapsedTime(Math.floor((Date.now() - startTime) / 1000));\n      }, 1000);\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [status, startTime]);\n\n  // Format time for display\n  const formatTime = (seconds: number): string => {\n    if (seconds < 60) return `${seconds}s`;\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}m ${remainingSeconds}s`;\n  };\n\n  // Status indicator based on current status\n  const renderStatusIndicator = () => {\n    switch (status) {\n      case 'idle':\n        return <Clock className=\"h-5 w-5 text-gray-500\" />;\n      case 'preparing':\n      case 'analyzing':\n        return (\n          <svg\n            className=\"animate-spin h-5 w-5 text-blue-500\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n          >\n            <circle\n              className=\"opacity-25\"\n              cx=\"12\"\n              cy=\"12\"\n              r=\"10\"\n              stroke=\"currentColor\"\n              strokeWidth=\"4\"\n            ></circle>\n            <path\n              className=\"opacity-75\"\n              fill=\"currentColor\"\n              d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            ></path>\n          </svg>\n        );\n      case 'complete':\n        return <CheckCircle className=\"h-5 w-5 text-green-500\" />;\n      case 'error':\n        return <AlertCircle className=\"h-5 w-5 text-red-500\" />;\n      default:\n        return null;\n    }\n  };\n\n  // Status text based on current status\n  const getStatusText = (): string => {\n    if (statusMessage) return statusMessage;\n\n    switch (status) {\n      case 'idle':\n        return 'Waiting to start analysis...';\n      case 'preparing':\n        return 'Preparing analysis...';\n      case 'analyzing':\n        return currentStep && totalSteps\n          ? `Analyzing (Step ${currentStep} of ${totalSteps})...`\n          : 'Analyzing...';\n      case 'complete':\n        return 'Analysis complete';\n      case 'error':\n        return error?.message || 'An error occurred during analysis';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div\n      className={`rounded-lg p-4 ${\n        status === 'error'\n          ? 'bg-red-50'\n          : status === 'complete'\n            ? 'bg-green-50'\n            : 'bg-blue-50'\n      }`}\n    >\n      <div className=\"flex items-center mb-3\">\n        {renderStatusIndicator()}\n        <span\n          className={`ml-2 font-medium ${\n            status === 'error'\n              ? 'text-red-700'\n              : status === 'complete'\n                ? 'text-green-700'\n                : 'text-blue-700'\n          }`}\n        >\n          {getStatusText()}\n        </span>\n      </div>\n\n      {/* Progress bar */}\n      <Progress\n        value={progress}\n        className={`h-2 ${\n          status === 'error'\n            ? 'bg-red-100'\n            : status === 'complete'\n              ? 'bg-green-100'\n              : 'bg-blue-100'\n        }`}\n      />\n\n      {/* Time information */}\n      <div className=\"flex justify-between mt-2 text-sm\">\n        <div className=\"text-gray-600\">\n          {status === 'preparing' || status === 'analyzing' ? (\n            <>Elapsed time: {formatTime(elapsedTime)}</>\n          ) : status === 'complete' ? (\n            <>Total time: {formatTime(elapsedTime)}</>\n          ) : null}\n        </div>\n        <div className=\"text-gray-600\">\n          {estimatedTimeRemaining !== undefined &&\n            status !== 'complete' &&\n            status !== 'error' && (\n              <>Est. remaining: {formatTime(estimatedTimeRemaining)}</>\n            )}\n        </div>\n      </div>\n\n      {/* Step indicators for multi-stage processes */}\n      {totalSteps > 1 && status !== 'idle' && (\n        <div className=\"mt-4\">\n          <div className=\"flex justify-between mb-1\">\n            <span className=\"text-xs text-gray-600\">Progress</span>\n            <span className=\"text-xs text-gray-600\">\n              {currentStep} of {totalSteps} steps\n            </span>\n          </div>\n          <div className=\"flex space-x-1\">\n            {Array.from({ length: totalSteps }).map((_, i) => (\n              <div\n                key={i}\n                className={`h-1.5 rounded-full flex-1 ${\n                  i < currentStep\n                    ? 'bg-blue-500'\n                    : i === currentStep &&\n                        (status === 'preparing' || status === 'analyzing')\n                      ? 'bg-blue-300'\n                      : 'bg-gray-200'\n                }`}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Error details */}\n      {status === 'error' && error && (\n        <div className=\"mt-3 p-2 bg-red-100 rounded text-sm text-red-800\">\n          {error.message}\n        </div>\n      )}\n\n      {/* Cancel button */}\n      {(status === 'preparing' || status === 'analyzing') && onCancel && (\n        <div className=\"mt-3 flex justify-end\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={onCancel}\n            className=\"text-gray-500 hover:text-gray-700\"\n          >\n            <X className=\"h-4 w-4 mr-1\" />\n            Cancel\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AnalysisProgress;\n"],"names":["Clock","createLucideIcon","Progress","forwardRef","className","value","max","props","ref","valueString","maxString","jsx","AnalysisProgress","status","currentStep","totalSteps","estimatedTimeRemaining","statusMessage","error","onCancel","progress","setProgress","useState","elapsedTime","setElapsedTime","startTime","useEffect","stepProgress","interval","formatTime","seconds","minutes","remainingSeconds","renderStatusIndicator","jsxs","CheckCircle","AlertCircle","getStatusText","Fragment","_","i","Button","X"],"mappings":"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","x_google_ignoreList":[0]}