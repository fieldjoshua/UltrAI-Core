# Dependencies
node_modules
/.pnp
.pnp.js
.venv
venv
__pycache__/
*.py[cod]
*$py.class
.swc

# Testing
/coverage
.pytest_cache
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.hypothesis/

# Build outputs
/dist
/build
*.so
.Python
develop-eggs/
downloads/
eggs/
.eggs/
lib/
lib64/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# Local env files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
*.env
!.env.example

# Debug logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*
pip-log.txt
pip-delete-this-directory.txt
*.log

# Vercel
.vercel
.next

# OS specific
.DS_Store
.AppleDouble
.LSOverride
Thumbs.db
ehthumbs.db
Desktop.ini

# IDE specific
.idea/
.vscode/
*.swp
*.swo
*~
.project
.classpath
.settings/

# Temp/Cache directories
.temp
.tmp
.cache
temp/
temp_uploads/
logs/

# Large binary files
*.dmg
*.iso
*.tar
*.zip
*.gz
*.tgz
*.bz2
*.rar

# Specific large directories
Nontechnical/
outputs/

# Ollama
/ollama

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
build/
dist/
parts/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Unit test / coverage reports
nosetests.xml
coverage.xml
*.cover
*.py,cover
cover/

# Translations
*.mo
*.pot

# Django stuff:
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc

# IDE
.idea/
.vscode/
*.swp
*.swo

# VS Code specific files
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/extensions.json.recommended

# Security and environment files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
*.pem
*.key
*.crt
*.p12
*.pfx
.key-*
.cert-*

# Coverage reports
coverage/
.coverage
coverage.xml
htmlcov/

# Python virtual environment
venv/
.venv/
env/
ENV/

# Backup files
*.bak
*.tmp
*.temp

# Pre-commit
.pre-commit-config.yaml.bak

# IDE files
.idea/
.vs/
*.swp
*.swo
.DS_Store

**/.claude/settings.local.json
