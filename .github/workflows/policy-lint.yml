name: Policy Lint

on:
  pull_request:
    branches: [ main, production ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      - name: Validate policies.yaml and version bump
        run: |
          python - <<'PY'
          import os, sys, yaml, subprocess
          with open('ops/policies.yaml', 'r', encoding='utf-8') as f:
              data = yaml.safe_load(f) or {}
          assert 'version' in data, 'version is required in ops/policies.yaml'
          assert 'policies' in data and isinstance(data['policies'], dict), 'policies mapping required'
          # Require a version bump if file changed
          base = os.getenv('GITHUB_BASE_REF') or 'origin/main'
          proc = subprocess.run(['git','diff','--name-only', base, '--','ops/policies.yaml'], capture_output=True, text=True)
          changed = proc.stdout.strip() != ''
          if changed:
              # naive check: ensure version string differs from base
              proc2 = subprocess.run(['git','show', f'{base}:ops/policies.yaml'], capture_output=True, text=True)
              if proc2.returncode == 0:
                  old = yaml.safe_load(proc2.stdout) or {}
                  if old.get('version') == data.get('version'):
                      print('Policy file changed without version bump', file=sys.stderr)
                      sys.exit(1)
          print('Policy validation OK')
          PY


