name: Test Matrix

on:
  push:
    branches: [ main, production ]
  pull_request:
    branches: [ main, production ]
  workflow_dispatch:

jobs:
  test-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-category: [unit, integration, e2e]
        python-version: ['3.11']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run ${{ matrix.test-category }} tests
        run: |
          pytest -v -m "${{ matrix.test-category }}" \
            --html=report_${{ matrix.test-category }}.html \
            --self-contained-html \
            --alluredir=allure-results || true
      
      - name: Upload ${{ matrix.test-category }} test results
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.test-category }}-report
          path: |
            report_${{ matrix.test-category }}.html
            allure-results

  live-tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run live tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          HUGGINGFACE_API_KEY: ${{ secrets.HUGGINGFACE_API_KEY }}
        run: |
          pytest -v -m "live or live_online" \
            --html=report_live.html \
            --self-contained-html \
            --alluredir=allure-results || true
      
      - name: Upload live test results
        uses: actions/upload-artifact@v4
        with:
          name: live-report
          path: |
            report_live.html
            allure-results

  playwright-tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Install Playwright
        run: |
          pip install playwright
          playwright install
      
      - name: Run Playwright tests
        run: |
          pytest -v -m playwright \
            --html=report_playwright.html \
            --self-contained-html \
            --alluredir=allure-results || true
      
      - name: Upload Playwright test results
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: |
            report_playwright.html
            allure-results