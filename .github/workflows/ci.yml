name: Ultra CI Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 mypy pylint black
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        flake8 backend --count --select=E9,F63,F7,F82 --show-source --statistics
    - name: Format check with black
      run: |
        black --check backend
    - name: Type check with mypy
      run: |
        mypy backend

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: ultra_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-asyncio
        pip install -r requirements.txt
    - name: Run tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ultra_test
        REDIS_HOST: localhost
        REDIS_PORT: 6379
        JWT_SECRET_KEY: test_secret_key_for_ci
        ENVIRONMENT: test
      run: |
        python -m pytest tests/ --cov=backend -v