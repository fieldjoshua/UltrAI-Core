name: CI Enhanced

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint

    - name: Run Prettier
      run: npm run format || echo "Prettier check failed, please format your code"

  test-frontend:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: frontend

  test-backend:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install -r backend/requirements.txt
        pip install 'sentry-sdk[fastapi]'

    - name: Run backend tests
      run: |
        pytest backend/tests -v --cov=backend --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: backend

  deploy:
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up environment
      run: |
        echo "SENTRY_ENVIRONMENT=production" >> $GITHUB_ENV
        echo "REACT_APP_SENTRY_DSN=${{ secrets.SENTRY_DSN_FRONTEND }}" >> $GITHUB_ENV
        echo "SENTRY_DSN=${{ secrets.SENTRY_DSN_BACKEND }}" >> $GITHUB_ENV
        echo "ENVIRONMENT=production" >> $GITHUB_ENV

    - name: Create Sentry release
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      run: |
        # Install Sentry CLI
        curl -sL https://sentry.io/get-cli/ | bash
        
        # Create release
        export SENTRY_RELEASE="ultra@$(git rev-parse --short HEAD)"
        sentry-cli releases new $SENTRY_RELEASE
        sentry-cli releases set-commits $SENTRY_RELEASE --auto
        sentry-cli releases finalize $SENTRY_RELEASE

    - name: Build frontend
      run: npm run build

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-args: '--prod'
        working-directory: './'

    - name: Notify Sentry of deployment
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      run: |
        # Notify Sentry of deployment
        export SENTRY_RELEASE="ultra@$(git rev-parse --short HEAD)"
        sentry-cli releases deploys $SENTRY_RELEASE new -e production

  notify:
    needs: deploy
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Notify on success
        if: ${{ needs.deploy.result == 'success' }}
        uses: slackapi/slack-github-action@v2.0.0
        with:
          payload: |
            {
              "text": "✅ Deployment completed successfully! Ultra is now live in production."
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify on failure
        if: ${{ needs.deploy.result == 'failure' }}
        uses: slackapi/slack-github-action@v2.0.0
        with:
          payload: |
            {
              "text": "❌ Deployment failed! See GitHub Actions for details: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 