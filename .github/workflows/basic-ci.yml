name: Basic CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Configure Poetry Virtualenv
        run: poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: |
          poetry install --no-dev --no-root

      - name: Basic syntax check
        run: |
          poetry run python -m py_compile app_production.py

      - name: Test health endpoint
        run: |
          poetry run python - <<EOF
          import sys
          try:
              from app_production import app
              print('✓ App imports successfully')
          except Exception as e:
              print(f'✗ Import failed: {e}')
              sys.exit(1)
          EOF

      - name: AICheck Status
        run: |
          chmod +x aicheck
          ./aicheck status

      - name: Install MCP CLI
        run: |
          bash <(curl -sSL https://raw.githubusercontent.com/fieldjoshua/AICheck_MCP/main/install.sh)

      - name: Run MCP Server List
        run: |
          mcp --list-servers

      - name: Install Pandoc for PDF generation
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc texlive-latex-base

      - name: Generate Investigation Report PDF
        run: |
          pandoc .aicheck/actions/investigate-git-commit-omissions/supporting_docs/investigation-report.md \
            -o investigation-report.pdf

      - name: Upload Investigation Report PDF
        uses: actions/upload-artifact@v3
        with:
          name: investigation-report
          path: investigation-report.pdf

  test-frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Verify build output
        run: |
          if [ -f frontend/dist/index.html ]; then
            echo "✓ Frontend build successful"
          else
            echo "✗ Frontend build failed - no index.html"
            exit 1
          fi
