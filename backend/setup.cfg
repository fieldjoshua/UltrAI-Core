[flake8]
max-line-length = 150
extend-ignore = E203, W503, E303, E501, E126, E127, E128
# E303: too many blank lines
# E501: line too long (covered by max-line-length)
# E126/E127/E128: continuation line indentation
exclude = .git,__pycache__,build,dist,.venv,node_modules,venv,env

[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = False
disallow_incomplete_defs = False
check_untyped_defs = True
disallow_untyped_decorators = False
no_implicit_optional = True
strict_optional = True
ignore_errors = True

[mypy.plugins.numpy.*]
follow_imports = skip

[tool:black]
line-length = 150
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | node_modules
)/
'''

[pycodestyle]
max-line-length = 150
ignore = E303, E501, E126, E127, E128

[pep8]
max-line-length = 150
ignore = E303, E501, E126, E127, E128

[isort]
line_length = 150
multi_line_output = 3
include_trailing_comma = True

[pylint]
init-hook='import sys; sys.path.extend([".", ".venv/lib/python3.12/site-packages"])'
disable=C0111,C0103,W0621,R0903,R0913,W0511,C0301,C0114,C0115,C0116,R0901,W0622,W0212,E1101,R0902,W0707,C0412,W0221,R0201,W0613,E0213
good-names=i,j,k,ex,Run,_,id,db,v,cls
max-line-length=120
max-module-lines=2000
indent-string='    '
function-rgx=[a-z_][a-z0-9_]{2,50}$
variable-rgx=[a-z_][a-z0-9_]{2,50}$
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,50}|(__.*__))$
argument-rgx=[a-z_][a-z0-9_]{2,50}$
min-similarity-lines=7
ignore-imports=yes
ignored-modules=numpy,tensorflow,torch,cv2,pygame,PIL,pydantic_settings,pydantic
ignored-classes=SQLObject,SQLAlchemy,scoped_session,BaseSettings,Settings
generated-members=numpy.*,torch.*,cv2.*,pygame.*
dummy-variables-rgx=_$|dummy
notes=FIXME,XXX,TODO
allow-wildcard-with-all=no
max-args=10
max-locals=20
max-returns=10
max-statements=50
max-parents=10
max-attributes=15
min-public-methods=0
max-public-methods=50

[coverage:run]
source = backend
omit =
    */tests/*
    */migrations/*
    */venv/*
    */env/*
    */.env/*
    */settings.py
    */wsgi.py
    */asgi.py
    */manage.py
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError

[coverage:html]
directory = coverage_html_report

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_functions = test_*
python_classes = Test*
addopts = --verbose --cov=backend --cov-report=xml:test_results/backend_tests.xml
